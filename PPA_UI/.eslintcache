[{"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/App.jsx":"1","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/UserApp.jsx":"2","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Guest/NavBar.jsx":"3","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Tasks.jsx":"4","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/taskConstants.js":"5","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/TaskItem.jsx":"6","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/DatePicker.jsx":"7","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/tasksReducer.js":"8","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Projects.jsx":"9","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/modalConstants.js":"10","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Guest/GuestApp.jsx":"11","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/UserBar.jsx":"12","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Home.jsx":"13","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectBoard.jsx":"14","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/dateConstants.js":"15","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectModal.jsx":"16","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/projectConstants.js":"17","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Guest/Auth.jsx":"18","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/services/taskServices.js":"19","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/constants.js":"20","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/projectsReducer.js":"21","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/store.js":"22","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/projectsActions.js":"23","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/TaskModal.jsx":"24","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/services/projectServices.js":"25","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/tabConstants.js":"26","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/authConstants.js":"27","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/tasksActions.js":"28","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Guest/Description.jsx":"29","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/services/authServices.js":"30","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Common/Icons.jsx":"31","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/index.jsx":"32","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/errorConstants.js":"33","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/projectPointsReducer.js":"34","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectPointsModal.jsx":"35","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/services/projectPointServices.js":"36","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/projectPointsActions.js":"37","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/metadata.js":"38","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/projectPointConstants.js":"39","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/SubmitModal.jsx":"40","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectHandler.jsx":"41","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectItem.jsx":"42","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Profile.jsx":"43"},{"size":499,"mtime":1616440725153,"results":"44","hashOfConfig":"45"},{"size":5100,"mtime":1616440501689,"results":"46","hashOfConfig":"45"},{"size":678,"mtime":1616423037440,"results":"47","hashOfConfig":"45"},{"size":3731,"mtime":1616416308379,"results":"48","hashOfConfig":"45"},{"size":273,"mtime":1613311661369,"results":"49","hashOfConfig":"45"},{"size":2198,"mtime":1613313035935,"results":"50","hashOfConfig":"45"},{"size":4277,"mtime":1613123107351,"results":"51","hashOfConfig":"45"},{"size":1276,"mtime":1615812947056,"results":"52","hashOfConfig":"45"},{"size":1046,"mtime":1616328441752,"results":"53","hashOfConfig":"45"},{"size":63,"mtime":1613123107353,"results":"54","hashOfConfig":"45"},{"size":859,"mtime":1613248177116,"results":"55","hashOfConfig":"45"},{"size":4548,"mtime":1616437884609,"results":"56","hashOfConfig":"45"},{"size":2100,"mtime":1616416316300,"results":"57","hashOfConfig":"45"},{"size":10531,"mtime":1616437815911,"results":"58","hashOfConfig":"45"},{"size":463,"mtime":1613123107353,"results":"59","hashOfConfig":"45"},{"size":4217,"mtime":1616416310313,"results":"60","hashOfConfig":"45"},{"size":324,"mtime":1616245409831,"results":"61","hashOfConfig":"45"},{"size":4208,"mtime":1616416315210,"results":"62","hashOfConfig":"45"},{"size":1311,"mtime":1615465123774,"results":"63","hashOfConfig":"45"},{"size":592,"mtime":1616176814709,"results":"64","hashOfConfig":"45"},{"size":895,"mtime":1616177763630,"results":"65","hashOfConfig":"45"},{"size":347,"mtime":1615544350276,"results":"66","hashOfConfig":"45"},{"size":570,"mtime":1616177171898,"results":"67","hashOfConfig":"45"},{"size":7657,"mtime":1616425297671,"results":"68","hashOfConfig":"45"},{"size":1116,"mtime":1616176859342,"results":"69","hashOfConfig":"45"},{"size":164,"mtime":1613248114055,"results":"70","hashOfConfig":"45"},{"size":153,"mtime":1616335942701,"results":"71","hashOfConfig":"45"},{"size":656,"mtime":1614801552302,"results":"72","hashOfConfig":"45"},{"size":697,"mtime":1616423596969,"results":"73","hashOfConfig":"45"},{"size":814,"mtime":1616439386988,"results":"74","hashOfConfig":"45"},{"size":20163,"mtime":1616359479988,"results":"75","hashOfConfig":"45"},{"size":318,"mtime":1613123107354,"results":"76","hashOfConfig":"45"},{"size":560,"mtime":1616440835807,"results":"77","hashOfConfig":"45"},{"size":798,"mtime":1615808207498,"results":"78","hashOfConfig":"45"},{"size":4516,"mtime":1616251901109,"results":"79","hashOfConfig":"45"},{"size":958,"mtime":1615807996803,"results":"80","hashOfConfig":"45"},{"size":521,"mtime":1615808225934,"results":"81","hashOfConfig":"45"},{"size":391,"mtime":1615550576956,"results":"82","hashOfConfig":"45"},{"size":69,"mtime":1615546347316,"results":"83","hashOfConfig":"45"},{"size":842,"mtime":1616330720746,"results":"84","hashOfConfig":"45"},{"size":1827,"mtime":1616416310972,"results":"85","hashOfConfig":"45"},{"size":537,"mtime":1616329379589,"results":"86","hashOfConfig":"45"},{"size":7639,"mtime":1616442823544,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"141pxff",{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"99"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"99"},{"filePath":"143","messages":"144","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"99"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/App.jsx",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/UserApp.jsx",["191","192"],"import React, { useState } from \"react\";\nimport { NavLink, Redirect, Route, Switch, useParams } from \"react-router-dom\";\nimport { HOME, LOGOUT, PROJECTS, PROFILE, MYTASKS } from \"../../constants/tabConstants\";\nimport UserBar from \"./UserBar\";\nimport Home from \"./Home\";\nimport { HomeIcon, LogoutIcon, ProfileIcon, ProjectIcon, TaskIcon } from \"../Common/Icons\";\nimport Tasks from \"./Tasks\";\nimport Projects from \"./Projects\";\nimport ProjectBoard from \"./ProjectBoard\";\nimport \"../../styles/UserApp.css\";\nimport { BOARD } from \"../../constants/projectConstants\";\nimport Profile from \"./Profile\";\nimport avatarPhoto from \"../../img/avatar.jpg\";\n\nconst UserApp = () => {\n    const { id, projectId } = useParams();\n    const [tab, setTab] = useState(getTab());\n    const [mode, setMode] = useState(BOARD);\n    const [avatar, setAvatar] = useState(avatarPhoto);\n\n    function getTab() {\n        let path = window.location.pathname;\n        let index = path.indexOf(id);\n        \n        path = path.substr(index);\n        \n        switch (path) {\n            case `${id}`: return HOME;\n            case `${id}/tasks`: return MYTASKS;\n            case `${id}/projects`: return PROJECTS;\n            case `${id}/profile`: return PROFILE;\n        }\n    }\n\n    const selectProjectMode = () => mode === BOARD ? \"project_board\" : \"project_list\";\n\n    const clearStorage = () => {\n        const token = \"accessToken\";\n        const userId = \"id\";\n\n        localStorage.removeItem(token)\n        localStorage.removeItem(userId);\n    }\n\n    const getUserId = () => localStorage.getItem(\"id\");\n\n    const CustomLink = ({ tabName, url, icon, logout, className }) => {\n        return(\n            <NavLink onClick={() => logout ? clearStorage() : setTab(tabName)} \n                     className={tab === tabName ? `link focused ${className}` : `link ${className}`} \n                     to={`${url}`}>\n                {icon}\n                {tabName}\n            </NavLink>\n        )\n    }\n\n    return(\n        <div className=\"user_app\" onDragOver={e => e.preventDefault()}>\n            <div className=\"container\">\n                <div className=\"navbar\">\n                    <div className=\"logo\">\n                        <h2 style={{ fontWeight: 500 }}>Coursik</h2>\n                    </div>\n                    <div className=\"tabs\">\n                        <CustomLink tabName={HOME} url={`/home/${id}`} icon={<HomeIcon/>} logout={false} className=\"home_link\"/>\n                        <CustomLink tabName={MYTASKS} url={`/home/${id}/tasks`} icon={<TaskIcon/>} logout={false} className=\"tasks_link\"/>\n                        <CustomLink tabName={PROJECTS} url={`/home/${id}/projects`} icon={<ProjectIcon/>} logout={false} className=\"projects_link\"/>\n                        <CustomLink tabName={PROFILE} url={`/home/${id}/profile`} icon={<ProfileIcon/>} logout={false} className=\"profile_link\"/>\n                    </div>\n                    <div className=\"logout\">\n                        <CustomLink tabName={LOGOUT} url=\"/\" icon={<LogoutIcon/>} logout={true}/>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    <UserBar setAvatar={setAvatar} avatar={avatar} \n                             setMode={setMode} mode={mode} \n                             setTab={setTab} tab={tab}\n                    />\n                    <Switch>\n                        <Route exact path=\"/home/:id/tasks\">\n                            { id !== getUserId() ? <Redirect to={`/home/${getUserId()}/tasks`}/> : null }\n                            { !getUserId() ? <Redirect to=\"/\"/> : null }\n                            <Tasks />\n                        </Route>\n                        <Route exact path=\"/home/:id/projects/:projectId\">\n                            { !getUserId() ? <Redirect to=\"/\"/> : null }\n                            <ProjectBoard selectProjectMode={selectProjectMode} setTab={setTab} />\n                        </Route>\n                        <Route exact path=\"/home/:id/projects\">\n                            { id !== getUserId() ? <Redirect to={`/home/${getUserId()}/projects`}/> : null}\n                            { !getUserId() ? <Redirect to=\"/\"/> : null }\n                            <Projects setTab={setTab} />    \n                        </Route>\n                        <Route exact path=\"/home/:id/profile\">\n                            { id !== getUserId() ? <Redirect to={`/home/${getUserId()}/profile`}/> : null}\n                            { !getUserId() ? <Redirect to=\"/\"/> : null }\n                            <Profile setAvatar={setAvatar} avatar={avatar}/>    \n                        </Route>\n                        <Route exact path=\"/home/:id\">\n                            { id !== getUserId() ? <Redirect to={`/home/${getUserId()}`}/> : null}\n                            { !getUserId() ? <Redirect to=\"/\"/> : null }\n                            <Home setTab={setTab}/>\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserApp;",["193","194"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Guest/NavBar.jsx",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Tasks.jsx",["195","196","197","198","199","200"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { HideTriangleIcon, ShowTriangleIcon } from \"../Common/Icons\";\nimport { TODAY, UPCOMING, LATER, NODATE, OVERDUE } from \"../../constants/taskConstants\";\nimport TaskItem from \"./TaskItem\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport \"../../styles/Tasks.css\";\n\nconst Tasks = () => {\n    const tasks = useSelector(store => store.tasks);\n    const userId = localStorage.getItem(\"id\");\n    const dispatch = useDispatch();\n\n    useEffect(() => getTasksRequest(userId, dispatch), []);\n\n    const TaskHandler = ({ type }) => {\n        const [hideTaskHandler, setHideTaskHandler] = useState(false);\n\n        const renderTasks = () => {\n            const currentDate = new Date();\n\n            if (type === OVERDUE) {\n                return tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date))\n                            .map(task => {\n                    const taskDate = new Date(task.due_Date);\n                    const diff = Math.ceil((taskDate - currentDate) / (1000 * 3600 * 24));\n                    \n                    if (task.due_Date && diff < 0) return <TaskItem key={task.id} task={task} />\n                });\n            }\n\n            if (type === TODAY) {\n                return tasks.map(task => {\n                    const taskDate = new Date(task.due_Date);\n                    const isToday = taskDate.getDate() === currentDate.getDate() && taskDate.getMonth() === currentDate.getMonth() && taskDate.getFullYear() === currentDate.getFullYear();\n\n                    if (isToday) return <TaskItem key={task.id} task={task} />\n                });\n            }\n\n            if (type === UPCOMING) {\n                return tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date))\n                            .map(task => {\n                    const taskDate = new Date(task.due_Date);\n                    const diff = Math.ceil((taskDate - currentDate) / (1000 * 3600 * 24));\n                    \n                    if (diff > 0 && diff < 7) return <TaskItem key={task.id} task={task} />\n                });\n            }\n\n            if (type == LATER) {\n                return tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date))\n                            .map(task => {\n                    const taskDate = new Date(task.due_Date);\n                    const diff = Math.ceil((taskDate - currentDate) / (1000 * 3600 * 24));\n                    \n                    if (diff >= 7) return <TaskItem key={task.id} task={task} />\n                });\n            }\n\n            if (type === NODATE) { \n                return tasks.map(task => !task.due_Date ? <TaskItem key={task.id} task={task} /> : null);\n            }\n        }\n\n        return(\n            <div className=\"task_handler\">\n                <div className=\"title_handler\">\n                    <span onClick={() => setHideTaskHandler(!hideTaskHandler)} className=\"title\">\n                        { hideTaskHandler ? <HideTriangleIcon/> : <ShowTriangleIcon/> }\n                        { type }\n                    </span>\n                </div>\n                <div className={hideTaskHandler ? \"tasks tasks-hidden\" : \"tasks\"}>\n                    { renderTasks() }\n                </div>\n            </div>\n        );\n    }\n\n    return(\n        <div className=\"tasks_component\">\n            <TaskHandler type={OVERDUE}/>\n            <TaskHandler type={TODAY}/>\n            <TaskHandler type={UPCOMING}/>\n            <TaskHandler type={LATER}/>\n            <TaskHandler type={NODATE}/>\n        </div>\n    )\n}\n\nexport default Tasks;",["201","202"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/taskConstants.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/TaskItem.jsx",["203","204","205"],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { briefMonths, TODAY, TOMORROW, YESTERDAY } from \"../../constants/dateConstants\";\nimport { deleteTaskRequest } from \"../../services/taskServices\";\nimport { TaskIcon } from \"../Common/Icons\";\nimport TaskModal from \"./TaskModal\";\nimport { UPDATE } from \"../../constants/modalConstants\";\nimport \"../../styles/TaskItem.css\";\n\nconst TaskItem = ({ task }) => {\n    const [openModal, setOpenModal] = useState(false);\n    const dispatch = useDispatch();\n\n    const currentDate = new Date();\n    const taskDate = new Date(task.due_Date);\n\n    const diff = Math.ceil((taskDate - currentDate) / (1000 * 3600 * 24));\n\n    let dueDateLabel;\n    let classNameDueDate;\n\n    if (task.due_Date) {\n        const taskDay = taskDate.getDate();\n        const taskMonth = taskDate.getMonth();\n        \n        dueDateLabel = taskDay + \" \" + briefMonths[taskMonth];\n        classNameDueDate = \"future_date\";\n        \n        if (diff < 0) {\n            classNameDueDate = \"past_date\";\n        }\n        else if (diff == 0 || diff == 1) {\n            classNameDueDate = \"current_date\";\n        }\n    \n        switch (diff) {\n            case -1: \n                dueDateLabel = YESTERDAY;\n                break;\n            case 0: \n                dueDateLabel = TODAY;\n                break;\n            case 1: \n                dueDateLabel = TOMORROW;\n                break;\n        }\n    }\n\n    return(\n        <div className=\"task_item\">\n            <div onClick={() => deleteTaskRequest(task.id, dispatch)} className=\"icon_holder\">\n                <TaskIcon/>\n            </div>\n            <div onClick={() => setOpenModal(true)} className=\"content_holder\">\n                <div className=\"text_holder\">\n                    <span  className=\"text\">{ task.name }</span>\n                </div>\n                <div className=\"date_holder\">\n                    <span className={ classNameDueDate }>{ dueDateLabel }</span>\n                </div>\n            </div>\n            { openModal ? <TaskModal task={task} closeModal={() => setOpenModal(false)} type={UPDATE}/> : null }\n        </div>\n    );\n}\n\nexport default TaskItem;","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/DatePicker.jsx",["206","207","208","209","210"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { LeftIcon, RightIcon } from \"../Common/Icons\";\nimport { months, weekDays } from \"../../constants/dateConstants\";\nimport \"../../styles/DatePicker.css\";\n\nconst DatePicker = ({ selectedDate, setDueDate, setIsDueDate, setShowDatePicker }) => {\n    const currentDate = new Date();\n    const [month, setMonth] = useState(selectedDate && selectedDate.getMonth() || new Date().getMonth());\n    const [year, setYear] = useState(selectedDate && selectedDate.getFullYear() || new Date().getFullYear());\n    const [days, setDays] = useState({ previousMonth: [], currentMonth: [], nextMonth: [] });\n    const datePickerRef = useRef();\n\n    useEffect(() => datePickerRef.current.focus(), []);\n\n    useEffect(() => {\n        const newDays = getNewDays();\n\n        if (month < 0) {\n            setMonth(months.length - 1);\n            setYear(year - 1);\n        }\n        else if (month >= months.length) {\n            setMonth(0);\n            setYear(year + 1);\n        }\n\n        setDays(newDays);\n    }, [month]);\n\n    const getNewDays = () => {\n        const tableCapacity = weekDays.length * 6;\n        const firstDayMonth = 1;\n\n        const firstWeekDayCurrentMonth = new Date(year, month).getDay() || 7;\n        const lastDayCurrentMonth = new Date(year, month + 1, 0).getDate();\n\n        const lastDayPreviousMonth = new Date(year, month, 0).getDate();\n        const firstDayPreviousMonth = lastDayPreviousMonth - firstWeekDayCurrentMonth + 2;\n\n        const lastDayNextMonth = tableCapacity - (lastDayCurrentMonth + (lastDayPreviousMonth - firstDayPreviousMonth + 1));\n        \n        const newDays = {\n            previousMonth: [],\n            currentMonth: [],\n            nextMonth: []\n        }\n\n        for (let i = firstDayPreviousMonth; i < lastDayPreviousMonth + 1; i++) {\n            newDays.previousMonth.push(i);\n        }\n\n        for (let i = firstDayMonth; i < lastDayCurrentMonth + 1; i++) {\n            newDays.currentMonth.push(i);\n        }\n\n        for (let i = firstDayMonth; i < lastDayNextMonth + 1; i++) {\n            newDays.nextMonth.push(i);\n        }\n\n        return newDays;\n    }\n\n    const dateClickHandler = (day, month) => {\n        const date = new Date(year, month, day);\n        \n        setDueDate(date);\n        setIsDueDate(true);\n    }\n\n    const renderDays = (mappingMonth, diff, isCurrentMonth) => {\n        const currentMonth = isCurrentMonth ? \"day_current_month\" : \"day_other_month\";\n\n        return mappingMonth.map(day => {\n            const isCurrentDay = currentDate.getDate() === day && currentDate.getMonth() === (month + diff) && currentDate.getFullYear() === year;\n            const currentDay = isCurrentDay ? \"current_day\" : \"\";\n            const isSelectedDay = selectedDate && selectedDate.getDate() === day && selectedDate.getMonth() === (month + diff) && selectedDate.getFullYear() === year;\n            const selectedDay = isSelectedDay ? \"selected_day\" : \"\";\n\n            return (<div onClick={() => dateClickHandler(day, month + diff)} className={`day ${currentDay} ${selectedDay} ${currentMonth}`}>{ day }</div>)\n        });\n    }\n\n    return(\n        <div ref={datePickerRef} tabIndex={-1} onFocus={() => setShowDatePicker(true)} onBlur={() => setShowDatePicker(false)} className=\"date_picker\">\n            <div className=\"month_handler\">\n                <div onClick={() => setMonth(month - 1)}  className=\"icon_holder\">\n                    <LeftIcon/>\n                </div>\n                <span className=\"month\">{ months[month] + \" \" + year }</span>\n                <div onClick={() => setMonth(month + 1)} className=\"icon_holder\">\n                    <RightIcon/>\n                </div>\n            </div>\n            <div className=\"calendar\">\n                <div className=\"week_days_holder\">\n                    { weekDays.map(weekDay => <div className=\"week_day\">{ weekDay }</div>) }\n                </div>\n                <div className=\"all_days_holder\">\n                    { renderDays(days.previousMonth, -1, false) }\n                    { renderDays(days.currentMonth, 0, true) }\n                    { renderDays(days.nextMonth, 1, false) }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DatePicker;","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/tasksReducer.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Projects.jsx",["211","212"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/modalConstants.js",[],["213","214"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Guest/GuestApp.jsx",[],["215","216"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/UserBar.jsx",["217","218","219","220","221"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Home.jsx",["222","223","224"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectBoard.jsx",["225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\nimport { deleteTaskRequest, getTasksRequest, updateTasksStatusRequest } from \"../../services/taskServices\";\nimport { TO_DO, IN_PROGRESS, COMPLETED, TODAY } from \"../../constants/taskConstants\";\nimport TaskModal from \"../User/TaskModal\";\nimport { CREATE, UPDATE } from \"../../constants/modalConstants\";\nimport { TaskIcon } from \"../Common/Icons\";\nimport { briefMonths, TOMORROW, YESTERDAY } from \"../../constants/dateConstants\";\nimport \"../../styles/ProjectBoard.css\";\nimport { getRequest } from \"../../services/authServices\";\n\nconst ProjectBoard = ({ selectProjectMode, setTab }) => {\n    const [openCreateModal, setOpenCreateModal] = useState(false);\n    const [openUpdateModal, setOpenUpdateModal] = useState(false);\n    const [category, setCategory] = useState(TO_DO);\n    const [priority, setPriority] = useState(0);\n    const [openedTask, setOpenedTask] = useState(null);\n    const { id, projectId } = useParams();\n    const dispatch = useDispatch();\n    const tasks = useSelector(store => store.tasks);\n    const projects = useSelector(store => store.projects);\n    const project = projects.find(proj => proj.id === Number(projectId));\n    const currentTasks = tasks.length && tasks.filter(task => task.project_Id === Number(projectId))\n                                              .sort((taskA, taskB) => taskA.priority - taskB.priority);\n    const [data, setData] = useState(updateData());\n    const dragItem = useRef();\n    const dragNode = useRef();\n    const [dragging, setDragging] = useState(false);\n    const [canExecuteQuery, setCanExecuteQuery] = useState(false);\n    const [avatar, setAvatar] = useState();\n    const [x, setX] = useState(0);\n    const [y, setY] = useState(0);\n\n    useEffect(() => {\n        if (project) {\n            setTab(project.name);\n        }\n    }, [project]);\n\n    useEffect(async () => await getTasksRequest(id, dispatch), []);\n    useEffect(async () => await getProjectsRequest(id, dispatch), []);\n\n    useEffect(() => setData(updateData()), [tasks]);\n\n    useEffect(async () => {\n        if (canExecuteQuery) {\n            await updateTasksStatus()\n                .then(() => setData(updateData()))\n        }\n    }, [canExecuteQuery]);\n\n    useEffect(async () => await getRequest(id).then(user => setAvatar(user.avatar)), []);\n\n    function updateData () {\n        const categories = [TO_DO, IN_PROGRESS, COMPLETED];\n        const newData = categories.map(category => { return { title: category, tasks: [] } });\n\n        if (currentTasks) {\n            currentTasks.forEach(task => {\n                switch (task.category) {\n                    case TO_DO:\n                        newData[0].tasks.push(task);\n                        break;\n                    case IN_PROGRESS:\n                        newData[1].tasks.push(task);\n                        break;\n                    case COMPLETED:\n                        newData[2].tasks.push(task);\n                        break;\n                }\n            })\n        }\n\n        return newData;\n    }\n\n    const updateTasksStatus = async () => {\n        const categories = [TO_DO, IN_PROGRESS, COMPLETED];\n        const newTasks = [];\n\n        data.forEach((board, boardId) => {\n            board.tasks.forEach((task, taskId) => {\n                const edittedTask = currentTasks.find(tempTask => tempTask.id == task.id);\n                newTasks.push({\n                    ...edittedTask,\n                    category: categories[boardId],\n                    priority: taskId + 1\n                });\n            })\n        });\n\n        return await updateTasksStatusRequest(newTasks, dispatch)\n                        .then(data => data)\n                        .catch(e => console.log(e));\n    }\n\n    const handleDragStart = (e, params) => {\n        dragItem.current = params;\n        dragNode.current = e.target;\n        dragNode.current.addEventListener(\"dragend\", e => handleDragEnd(e));\n\n        setTimeout(() => {\n            setCanExecuteQuery(false);\n            setDragging(true);\n        }, 0);\n    }\n\n    const handleDragEnd = e => {\n        e.preventDefault();\n        \n        setDragging(false);\n        setCanExecuteQuery(true);\n\n        dragNode.current.removeEventListener(\"dragend\", e => handleDragEnd(e));\n        dragItem.current = null;\n        dragNode.current = null;\n    }\n\n    const handleDragEnter = (e, params) => {\n        const currentItem = dragItem.current;\n        const targetRect = e.target.getBoundingClientRect();\n        const tempX = targetRect.x;\n        const tempY = targetRect.y;\n\n        if (e.target.id !== dragNode.current.id && (tempX !== x || tempY !== y)) {\n            setX(tempX);\n            setY(tempY);\n            setData(oldData => {\n                let newList = JSON.parse(JSON.stringify(oldData));\n                newList[params.boardId].tasks.splice(params.taskId, 0, newList[currentItem.boardId].tasks.splice(currentItem.taskId, 1)[0]);\n                dragItem.current = params;\n                return newList;\n            })\n        }\n    }\n\n    const handleDragOver = e => {\n        e.preventDefault();\n    }\n\n    const changeStyle = ({ boardId, taskId }) => {\n        const currentTask = dragItem.current;\n\n        if (currentTask.boardId === boardId && currentTask.taskId === taskId) {\n            return \"dragging project_task_item\";\n        }\n\n        return \"project_task_item\";\n    }\n\n    const ProjectTaskItem = ({ boardId, taskId, task }) => {\n        const currentDate = new Date();\n        const taskDate = new Date(task.due_Date);\n\n        const diff = Math.ceil((taskDate - currentDate) / (1000 * 3600 * 24));\n\n        let dueDateLabel;\n        let classNameDueDate;\n\n        if (task.due_Date) {\n            const taskDay = taskDate.getDate();\n            const taskMonth = taskDate.getMonth();\n            \n            dueDateLabel = taskDay + \" \" + briefMonths[taskMonth];\n            classNameDueDate = \"future_date\";\n            \n            if (diff < 0) {\n                classNameDueDate = \"past_date\";\n            }\n            else if (diff == 0 || diff == 1) {\n                classNameDueDate = \"current_date\";\n            }\n        \n            switch (diff) {\n                case -1: \n                    dueDateLabel = YESTERDAY;\n                    break;\n                case 0: \n                    dueDateLabel = TODAY;\n                    break;\n                case 1: \n                    dueDateLabel = TOMORROW;\n                    break;\n            }\n        }\n\n        return(\n            <div className={dragging ? changeStyle({ boardId, taskId }) : \"project_task_item\"}\n                 draggable={true}\n                 onDragStart={e => handleDragStart(e, { boardId, taskId })}\n                 onDragEnter={dragging ? e => handleDragEnter(e, { boardId, taskId }) : null}\n                 onDragOver={handleDragOver}\n                 id={task.id}\n                 onClick={() => {\n                     setOpenedTask(task);\n                     setOpenUpdateModal(true);\n                 }}\n            >\n                <div className=\"text_holder\" onDragEnter={e => e.preventDefault()}>\n                    <span onClick={() => { \n                            deleteTaskRequest(task.id, dispatch);\n                            setTimeout(() => {\n                                setOpenUpdateModal(false);\n                            }, 0);\n                          }}\n                          className=\"icon_holder\"\n                    >\n                        <TaskIcon/>\n                    </span>\n                    { task.name }\n                </div>\n                <div className=\"down_part\">\n                    <div className=\"avatar_holder\">\n                        <img className=\"avatar\" src={avatar}/>\n                    </div>\n                    <div className=\"date_holder\">\n                        <span className={ classNameDueDate } onDragEnter={e => e.preventDefault()}>{ dueDateLabel }</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const CreateProjectTaskItem = ({ category, priority }) => {\n        const openModalHandler = () => {\n            setPriority(priority);\n            setOpenCreateModal(true);\n            setCategory(category);\n        }\n\n        return(\n            <div className=\"create_project_task_item\">\n                <span onClick={openModalHandler}>Add task</span>\n            </div>\n        )\n    }\n\n    const renderTaskModal = () => {\n        return (\n            openCreateModal ? <TaskModal closeModal={() => setOpenCreateModal(false)} \n                                   type={CREATE} \n                                   category={category}\n                                   currentProject={project}\n                                   priority={priority}\n                              /> : null \n        )\n    }\n\n    const renderTaskUpdateModal = () => {\n        return (\n            openUpdateModal ? <TaskModal task={openedTask}\n                                         closeModal={() => setOpenUpdateModal(false)} \n                                         type={UPDATE} \n                        /> : null \n        )\n    }\n\n    const renderBoards = () => {\n        return (\n            data.map((board, index) => \n                <div className=\"board\">\n                    <div className=\"project_title\">\n                        <span>{ board.title }</span>\n                    </div>\n                    <div className=\"project_tasks\"\n                         id={\"board-\" + index}\n                         onDragEnter={dragging && !board.tasks.length ? e => handleDragEnter(e, { boardId: index, taskId: 0 }) : null}\n                         onDragOver={handleDragOver}\n                    >\n                        { board.tasks.map((task, taskIndex) => <ProjectTaskItem boardId={index} taskId={taskIndex} task={task} />) }\n                        <CreateProjectTaskItem category={board.title} priority={board.tasks.length}/>\n                    </div>\n                </div>\n            )\n        )\n    }\n\n    return(\n        <div className={ selectProjectMode() }\n             onDragOver={handleDragOver}>\n            { renderTaskModal() }\n            { renderTaskUpdateModal() }\n            { renderBoards() }\n        </div>\n    )\n}\n\nexport default ProjectBoard;","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/dateConstants.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectModal.jsx",["242","243","244"],"import React, { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { CourseDiplomWork, Default } from \"../../constants/metadata\";\nimport { COURSE_DIPLOM_WORK, NO_TEMPLATE, PRIVATE_TO_ME, PUBLIC_TO_IT } from \"../../constants/projectConstants\";\nimport { CreateProjectPointsRequest } from \"../../services/projectPointServices\";\nimport { createProjectRequest } from \"../../services/projectServices\";\nimport \"../../styles/ProjectModal.css\";\n\nconst ProjectModal = ({ setTab, closeModal }) => {\n    const history = useHistory();\n    const userId = localStorage.getItem(\"id\");\n    const [projectName, setProjectName] = useState(\"\");\n    const [templateId, setTemplateId] = useState(1);\n    const [privacy, setPrivacy] = useState(PUBLIC_TO_IT);\n    const projectNameInput = useRef();\n    const dispatch = useDispatch();\n\n    const submitProjectHandler = async () => {\n        await createProject()\n            .then((data) => {\n                redirectToProject(data.payload.id);\n                closeModal();\n            })\n    }\n\n    const redirectToProject = projectId => history.push(`/home/${userId}/projects/${projectId}`);\n\n    const createProject = async () => {\n        const newProject = {\n            user_Id: getUserId(),\n            template_Id: templateId,\n            name: projectName,\n            privacy\n        }\n\n        return await createProjectRequest(newProject, dispatch)\n            .then(async (data) => {\n                await createProjectOptions(data.payload.id);\n                return data;\n            })\n            .catch(e => console.log(e));\n    }\n\n    const createProjectOptions = async (projectId) => {\n        const options = [];\n        let Metadata;\n\n        if (templateId == 1) {\n            Metadata = Default;\n        }\n        else if (templateId == 2) {\n            Metadata = CourseDiplomWork;\n        }\n\n        for (let i = 0; i < Metadata.length; i++) {\n            let initialData = Metadata[i];\n            let option = {};\n\n            if (initialData.title == \"Title\") {\n                option = {\n                    ...initialData,\n                    project_Id: projectId,\n                    value: projectName\n                }\n            }\n            else {\n                option = {\n                    ...initialData,\n                    project_Id: projectId,\n                }\n            }\n\n            options.push(option);\n        }\n\n        return CreateProjectPointsRequest(options, dispatch)\n            .then(data => data)\n            .catch(e => console.log(e))\n    }\n\n    const getUserId = () => localStorage.getItem(\"id\");\n\n    return(\n        <div className=\"project_modal\">\n            <div className=\"modal_window\">\n                <input value={projectName} \n                       onChange={e => setProjectName(e.target.value)} \n                       className=\"project_name\" \n                       placeholder=\"Project Name\"\n                       ref={projectNameInput}\n                />\n                <div className=\"holder template_holder\">\n                    <span>Template:</span>\n                    <select className=\"template\" onChange={e => setTemplateId(e.target.value)}>\n                        <option value={1}>{ NO_TEMPLATE }</option>\n                        <option value={2}>{ COURSE_DIPLOM_WORK }</option>\n                    </select>\n                </div>\n                <div className=\"holder privacy_holder\">\n                    <span>Privacy:</span>\n                    <select className=\"privacy\" onChange={e => setPrivacy(e.target.value)}>\n                        <option>{ PUBLIC_TO_IT }</option>\n                        <option>{ PRIVATE_TO_ME }</option>\n                    </select>\n                </div>\n                <div className=\"submit_part\">\n                    <button onClick={() => submitProjectHandler()} disabled={!projectName || !projectName.trim()} className=\"submit_project\">\n                        Create Project \n                    </button>\n                </div>\n            </div>\n            <div onClick={ closeModal } className=\"overlay\"></div>\n        </div>\n    )\n}\n\nexport default ProjectModal;","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/projectConstants.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Guest/Auth.jsx",["245","246"],"import React, { useEffect, useState } from \"react\";\nimport { LOGIN, REGISTER } from \"../../constants/authConstants\";\nimport { ShowIcon, HideIcon } from \"../Common/Icons\";\nimport { EXISTINGEMAIL, INVALIDDATA, MINPASSWORDLENGTH, NOERROR, PASSWORDDONTMATCH, UNKNOWNERROR } from \"../../constants/errorConstants\";\nimport { loginRequest, registerRequest } from \"../../services/authServices\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../../styles/Auth.css\";\n\nconst Auth = ({ authMethod }) => {\n    const history = useHistory();\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [error, setError] = useState(NOERROR);\n\n    useEffect(() => hideError(), [login, password, repeatPassword, authMethod]);\n    \n    useEffect(() => {\n        const token = getToken();\n\n        if (token) {\n            switchRoute(\"/home/1\");\n        }\n    }, [authMethod]);\n\n    const hideError = () => {\n        setError(NOERROR);\n        return false;\n    }\n    \n    const showError = e => {\n        setError(e);\n        return true;\n    }\n\n    const isError = () => {\n        if (password.length < 6) {\n            return showError(MINPASSWORDLENGTH);\n        }\n        else if (password !== repeatPassword) {\n            return showError(PASSWORDDONTMATCH);\n        }\n\n        return hideError();\n    }\n\n    const authHandler = () => {\n        if (authMethod === LOGIN) {\n            return loginHandler();\n        }\n\n        if (!isError()) {\n            return registerHandler();\n        }\n    }\n\n    const loginHandler = async () => {\n        const existingUser = { login, password };\n\n        return await loginRequest(existingUser)\n            .then((data) => {\n                setUserId(data.loggedUser.id);\n                setToken(data.token.accessToken);\n                hideError();\n                switchRoute(`/home/${data.loggedUser.id}`);\n            })\n            .catch(() => showError(INVALIDDATA));\n    }\n\n    const registerHandler = async () => {\n        const newUser = { login, password };\n\n        return await registerRequest(newUser)\n            .then((data) => {\n                setUserId(data.newUser.id);\n                setToken(data.token.accessToken);\n                switchRoute(`/home/${data.newUser.id}/profile`);\n                hideError();\n            })\n            .catch(() => showError(EXISTINGEMAIL));\n    }\n\n    const setUserId = userId => {\n        const id = \"id\";\n        localStorage.setItem(id, userId);\n    }\n\n    const setToken = accessToken => {\n        const token = \"accessToken\";\n        localStorage.setItem(token, accessToken);\n    }\n\n    const getToken = () => {\n        const token = \"accessToken\";\n        return localStorage.getItem(token); \n    }\n\n    const switchRoute = url => history.push(url);\n\n    return(\n        <div className=\"auth\">\n            <span className=\"error\">{error}</span>\n            <input value={login} onChange={e => setLogin(e.target.value)} placeholder=\"Login\" className=\"login\"/>\n            <input value={password} onChange={e => setPassword(e.target.value)} type={showPassword ? \"text\" : \"password\"} placeholder=\"Password\" className=\"password\"/>\n            {\n                authMethod === REGISTER ? \n                    <input value={repeatPassword}\n                           onChange={e => setRepeatPassword(e.target.value)} \n                           type={showPassword ? \"text\" : \"password\"}\n                           placeholder=\"Repeat password\" \n                           className=\"password\"\n                    /> : null \n            }\n            <div className=\"toggler\">\n                <label className=\"switcher\">\n                    <input type=\"checkbox\"/>\n                    <span onClick={() => setShowPassword(!showPassword) } className=\"slider round\">\n                        <ShowIcon/>\n                        <HideIcon/>\n                    </span>\n                </label>\n            </div>\n            <button onClick={() => authHandler()} className=\"confirm\">Confirm</button>\n        </div>\n    )\n}\n\nexport default Auth;","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/services/taskServices.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/constants.js",[],["247","248"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/projectsReducer.js",["249"],"import { GET_PROJECTS, CREATE_PROJECT, DELETE_PROJECT, UPDATE_PROJECT } from \"./constants\";\n\nconst initialState = [];\n\nexport const projectsReducer = (state = initialState, action) => {\n    let newState = [];\n\n    switch (action.type) {\n        case GET_PROJECTS:\n            newState = [...action.payload];\n            return newState;\n        case CREATE_PROJECT:\n            newState = [...state, action.payload];\n            return newState;\n        case UPDATE_PROJECT:\n            newState = [...state].map(project => {\n                if (project.id === action.payload.id)\n                    return action.payload;\n                return project;\n            })\n        case DELETE_PROJECT:\n            newState = [...state].filter(project => project.id !== action.payload);\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport default projectsReducer;","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/store.js",["250"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/projectsActions.js",[],["251","252"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/TaskModal.jsx",["253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/services/projectServices.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/tabConstants.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/authConstants.js",[],["272","273"],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/tasksActions.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Guest/Description.jsx",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/services/authServices.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Common/Icons.jsx",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/index.jsx",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/errorConstants.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/projectPointsReducer.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectPointsModal.jsx",["274","275"],"import React, { useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TEXTBOX, TEXTAREA } from \"../../constants/projectPointConstants\";\nimport { UpdateProjectPointsRequest } from \"../../services/projectPointServices\";\nimport { deleteProjectRequest, updateProjectRequest } from \"../../services/projectServices\";\nimport SubmitModal from \"./SubmitModal\";\nimport \"../../styles/ProjectPointsModal.css\";\n\nconst ProjectPointsModal = ({ setTab, values, closeModal }) => {\n    const [submitModalOpen, setSubmitModalOpen] = useState(false);\n    const projects = useSelector(store => store.projects);\n    const dispatch = useDispatch();\n    const inputs = [];\n\n    const TextBox = ({ projectPoint }) => {\n        const [value, setValue] = useState(projectPoint.value);\n        const ref = useRef();\n\n        inputs.push(ref);\n\n        return(\n            <div className=\"textbox\">\n                <span className=\"title\">{projectPoint.title}:</span>\n                <input value={ value }\n                       className=\"line\"\n                       onChange={e => setValue(e.target.value)}\n                       ref={ref}\n                />\n            </div>\n        )\n    }\n\n    const TextArea = ({ projectPoint }) => {\n        const [value, setValue] = useState(projectPoint.value);\n        const ref = useRef();\n\n        inputs.push(ref);\n\n        return(\n            <div className=\"textarea\">\n                <span className=\"title\">{projectPoint.title}:</span>\n                <textarea value={ value }\n                          className=\"box\"\n                          onChange={e => setValue(e.target.value)}\n                          ref={ref}\n                />\n            </div>\n        )\n    }\n\n    const submitUpdating = async () => {\n        const result = inputs.filter(input => input.current);\n        const projectPoints = [];\n\n        values.forEach(value => {\n            const projectPoint = {\n                id: value.id,\n                project_Id: value.project_Id,\n                type: value.type,\n                title: value.title,\n                value: value.value\n            }\n            \n            projectPoints.push(projectPoint);\n        })\n\n        for (let i = 0; i < values.length; i++) {\n            projectPoints[i].value = result[i].current.value;\n        }\n\n        const project = projects.find(proj => proj.id === values[0].project_Id);\n        project.name = projectPoints[0].value;\n\n        return await updateProjectRequest(project, dispatch)\n            .then(async () => {\n                return await UpdateProjectPointsRequest(projectPoints, dispatch)\n                    .then(() => {\n                        setTab(project.name);\n                        closeModal();\n                    })\n                    .catch(e => console.log(e));\n            })\n            .catch(e => console.log(e));\n    }\n\n    const deleteProject = async () => {\n        const projectId = values[0].project_Id;\n        return await deleteProjectRequest(projectId, dispatch)\n            .then(res => {\n                closeModal();\n                redirectToProjects();\n            })\n            .catch(e => console.log(e))\n    }\n\n    const redirectToProjects = () => {\n        const projectsTab = document.querySelector(\".projects_link\");\n        projectsTab.click();\n    };\n\n    return(\n        <div className=\"project_points_modal\">\n            { submitModalOpen ? <SubmitModal executeAction={deleteProject} closeModal={() => setSubmitModalOpen(false)}/> : null }\n            <div className=\"modal_window\">\n                { \n                    values.map(value => {\n                        switch (value.type) {\n                            case TEXTBOX:\n                                return <TextBox projectPoint={value} />;\n                            case TEXTAREA:\n                                return <TextArea projectPoint={value} />;\n                        }\n                    }) \n                }\n                <div className=\"submit_part\">\n                    <button onClick={() => setSubmitModalOpen(true)} className=\"delete_project\">\n                        Delete Project\n                    </button>\n                    <button onClick={submitUpdating} className=\"update_info\">\n                        Update Info\n                    </button>\n                </div>\n            </div>\n            <div onClick={ closeModal } className=\"overlay\"></div>\n        </div>\n    )\n}\n\nexport default ProjectPointsModal;","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/services/projectPointServices.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/redux/projectPointsActions.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/metadata.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/constants/projectPointConstants.js",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/SubmitModal.jsx",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectHandler.jsx",[],"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectItem.jsx",["276"],"import React from \"react\";\nimport { NoTemplateIcon, CourseWorkIcon, AddIcon } from \"../Common/Icons\";\nimport \"../../styles/ProjectItem.css\";\n\nconst ProjectItem = ({ className, project, title }) => {\n    return(\n        <div className={\"project \" + className}>\n            <div className=\"img_holder\">\n                { project ? project.template_Id == 1 ? <NoTemplateIcon/> : <CourseWorkIcon/> : <AddIcon/> }\n            </div>\n            <div className=\"project_title\">{title}</div>\n        </div>\n    );\n}\n\nexport default ProjectItem;","/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Profile.jsx",["277","278","279","280"],{"ruleId":"281","severity":1,"message":"282","line":16,"column":17,"nodeType":"283","messageId":"284","endLine":16,"endColumn":26},{"ruleId":"285","severity":1,"message":"286","line":27,"column":9,"nodeType":"287","messageId":"288","endLine":32,"endColumn":10},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":14,"column":56,"nodeType":"295","endLine":14,"endColumn":58,"suggestions":"296"},{"ruleId":"297","severity":1,"message":"298","line":24,"column":39,"nodeType":"299","messageId":"300","endLine":24,"endColumn":41},{"ruleId":"297","severity":1,"message":"298","line":33,"column":39,"nodeType":"299","messageId":"300","endLine":33,"endColumn":41},{"ruleId":"297","severity":1,"message":"298","line":43,"column":39,"nodeType":"299","messageId":"300","endLine":43,"endColumn":41},{"ruleId":"301","severity":1,"message":"302","line":51,"column":22,"nodeType":"303","messageId":"304","endLine":51,"endColumn":24},{"ruleId":"297","severity":1,"message":"298","line":53,"column":39,"nodeType":"299","messageId":"300","endLine":53,"endColumn":41},{"ruleId":"289","replacedBy":"305"},{"ruleId":"291","replacedBy":"306"},{"ruleId":"301","severity":1,"message":"302","line":32,"column":23,"nodeType":"303","messageId":"304","endLine":32,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":32,"column":36,"nodeType":"303","messageId":"304","endLine":32,"endColumn":38},{"ruleId":"285","severity":1,"message":"286","line":36,"column":9,"nodeType":"287","messageId":"288","endLine":46,"endColumn":10},{"ruleId":"307","severity":1,"message":"308","line":8,"column":53,"nodeType":"309","messageId":"310","endLine":8,"endColumn":55},{"ruleId":"307","severity":1,"message":"308","line":8,"column":80,"nodeType":"309","messageId":"310","endLine":8,"endColumn":82},{"ruleId":"307","severity":1,"message":"308","line":9,"column":51,"nodeType":"309","messageId":"310","endLine":9,"endColumn":53},{"ruleId":"307","severity":1,"message":"308","line":9,"column":81,"nodeType":"309","messageId":"310","endLine":9,"endColumn":83},{"ruleId":"293","severity":1,"message":"311","line":28,"column":8,"nodeType":"295","endLine":28,"endColumn":15,"suggestions":"312"},{"ruleId":"281","severity":1,"message":"313","line":4,"column":23,"nodeType":"283","messageId":"284","endLine":4,"endColumn":34},{"ruleId":"293","severity":1,"message":"294","line":14,"column":59,"nodeType":"295","endLine":14,"endColumn":61,"suggestions":"314"},{"ruleId":"289","replacedBy":"315"},{"ruleId":"291","replacedBy":"316"},{"ruleId":"289","replacedBy":"317"},{"ruleId":"291","replacedBy":"318"},{"ruleId":"293","severity":1,"message":"319","line":26,"column":15,"nodeType":"299","endLine":26,"endColumn":77},{"ruleId":"293","severity":1,"message":"320","line":26,"column":79,"nodeType":"295","endLine":26,"endColumn":90,"suggestions":"321"},{"ruleId":"293","severity":1,"message":"322","line":28,"column":35,"nodeType":"295","endLine":28,"endColumn":53,"suggestions":"323"},{"ruleId":"293","severity":1,"message":"324","line":30,"column":78,"nodeType":"295","endLine":30,"endColumn":80,"suggestions":"325"},{"ruleId":"326","severity":1,"message":"327","line":104,"column":21,"nodeType":"328","endLine":104,"endColumn":58},{"ruleId":"293","severity":1,"message":"294","line":17,"column":56,"nodeType":"295","endLine":17,"endColumn":58,"suggestions":"329"},{"ruleId":"293","severity":1,"message":"294","line":18,"column":59,"nodeType":"295","endLine":18,"endColumn":61,"suggestions":"330"},{"ruleId":"297","severity":1,"message":"298","line":32,"column":40,"nodeType":"299","messageId":"300","endLine":32,"endColumn":42},{"ruleId":"281","severity":1,"message":"331","line":3,"column":10,"nodeType":"283","messageId":"284","endLine":3,"endColumn":18},{"ruleId":"293","severity":1,"message":"332","line":40,"column":8,"nodeType":"295","endLine":40,"endColumn":17,"suggestions":"333"},{"ruleId":"293","severity":1,"message":"319","line":42,"column":15,"nodeType":"299","endLine":42,"endColumn":62},{"ruleId":"293","severity":1,"message":"334","line":42,"column":64,"nodeType":"295","endLine":42,"endColumn":66,"suggestions":"335"},{"ruleId":"293","severity":1,"message":"319","line":43,"column":15,"nodeType":"299","endLine":43,"endColumn":65},{"ruleId":"293","severity":1,"message":"334","line":43,"column":67,"nodeType":"295","endLine":43,"endColumn":69,"suggestions":"336"},{"ruleId":"293","severity":1,"message":"337","line":45,"column":44,"nodeType":"295","endLine":45,"endColumn":51,"suggestions":"338"},{"ruleId":"293","severity":1,"message":"319","line":47,"column":15,"nodeType":"299","endLine":52,"endColumn":6},{"ruleId":"293","severity":1,"message":"339","line":52,"column":8,"nodeType":"295","endLine":52,"endColumn":25,"suggestions":"340"},{"ruleId":"293","severity":1,"message":"319","line":54,"column":15,"nodeType":"299","endLine":54,"endColumn":84},{"ruleId":"293","severity":1,"message":"341","line":54,"column":86,"nodeType":"295","endLine":54,"endColumn":88,"suggestions":"342"},{"ruleId":"285","severity":1,"message":"286","line":62,"column":17,"nodeType":"287","messageId":"288","endLine":72,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":85,"column":79,"nodeType":"303","messageId":"304","endLine":85,"endColumn":81},{"ruleId":"301","severity":1,"message":"302","line":172,"column":27,"nodeType":"303","messageId":"304","endLine":172,"endColumn":29},{"ruleId":"301","severity":1,"message":"302","line":172,"column":40,"nodeType":"303","messageId":"304","endLine":172,"endColumn":42},{"ruleId":"285","severity":1,"message":"286","line":176,"column":13,"nodeType":"287","messageId":"288","endLine":186,"endColumn":14},{"ruleId":"326","severity":1,"message":"327","line":216,"column":25,"nodeType":"328","endLine":216,"endColumn":63},{"ruleId":"301","severity":1,"message":"302","line":49,"column":24,"nodeType":"303","messageId":"304","endLine":49,"endColumn":26},{"ruleId":"301","severity":1,"message":"302","line":52,"column":29,"nodeType":"303","messageId":"304","endLine":52,"endColumn":31},{"ruleId":"301","severity":1,"message":"302","line":60,"column":35,"nodeType":"303","messageId":"304","endLine":60,"endColumn":37},{"ruleId":"281","severity":1,"message":"343","line":4,"column":85,"nodeType":"283","messageId":"284","endLine":4,"endColumn":97},{"ruleId":"293","severity":1,"message":"344","line":25,"column":8,"nodeType":"295","endLine":25,"endColumn":20,"suggestions":"345"},{"ruleId":"289","replacedBy":"346"},{"ruleId":"291","replacedBy":"347"},{"ruleId":"348","severity":1,"message":"349","line":21,"column":9,"nodeType":"350","messageId":"351","endLine":23,"endColumn":29},{"ruleId":"352","severity":2,"message":"353","line":8,"column":20,"nodeType":"283","messageId":"354","endLine":8,"endColumn":40},{"ruleId":"289","replacedBy":"355"},{"ruleId":"291","replacedBy":"356"},{"ruleId":"307","severity":1,"message":"308","line":16,"column":51,"nodeType":"309","messageId":"310","endLine":16,"endColumn":53},{"ruleId":"307","severity":1,"message":"308","line":16,"column":64,"nodeType":"309","messageId":"310","endLine":16,"endColumn":66},{"ruleId":"307","severity":1,"message":"308","line":17,"column":57,"nodeType":"309","messageId":"310","endLine":17,"endColumn":59},{"ruleId":"307","severity":1,"message":"308","line":17,"column":77,"nodeType":"309","messageId":"310","endLine":17,"endColumn":79},{"ruleId":"307","severity":1,"message":"308","line":18,"column":63,"nodeType":"309","messageId":"310","endLine":18,"endColumn":65},{"ruleId":"307","severity":1,"message":"308","line":18,"column":84,"nodeType":"309","messageId":"310","endLine":18,"endColumn":86},{"ruleId":"307","severity":1,"message":"357","line":18,"column":84,"nodeType":"309","messageId":"310","endLine":18,"endColumn":86},{"ruleId":"307","severity":1,"message":"357","line":18,"column":92,"nodeType":"309","messageId":"310","endLine":18,"endColumn":94},{"ruleId":"307","severity":1,"message":"308","line":20,"column":66,"nodeType":"309","messageId":"310","endLine":20,"endColumn":68},{"ruleId":"307","severity":1,"message":"308","line":20,"column":93,"nodeType":"309","messageId":"310","endLine":20,"endColumn":95},{"ruleId":"293","severity":1,"message":"358","line":27,"column":77,"nodeType":"295","endLine":27,"endColumn":79,"suggestions":"359"},{"ruleId":"293","severity":1,"message":"319","line":29,"column":15,"nodeType":"299","endLine":29,"endColumn":74},{"ruleId":"293","severity":1,"message":"320","line":29,"column":76,"nodeType":"295","endLine":29,"endColumn":78,"suggestions":"360"},{"ruleId":"293","severity":1,"message":"319","line":31,"column":15,"nodeType":"299","endLine":31,"endColumn":82},{"ruleId":"293","severity":1,"message":"361","line":50,"column":8,"nodeType":"295","endLine":50,"endColumn":17,"suggestions":"362"},{"ruleId":"301","severity":1,"message":"302","line":97,"column":63,"nodeType":"303","messageId":"304","endLine":97,"endColumn":65},{"ruleId":"301","severity":1,"message":"302","line":98,"column":66,"nodeType":"303","messageId":"304","endLine":98,"endColumn":68},{"ruleId":"301","severity":1,"message":"302","line":99,"column":64,"nodeType":"303","messageId":"304","endLine":99,"endColumn":66},{"ruleId":"301","severity":1,"message":"363","line":103,"column":35,"nodeType":"303","messageId":"304","endLine":103,"endColumn":37},{"ruleId":"289","replacedBy":"364"},{"ruleId":"291","replacedBy":"365"},{"ruleId":"297","severity":1,"message":"298","line":106,"column":38,"nodeType":"299","messageId":"300","endLine":106,"endColumn":40},{"ruleId":"285","severity":1,"message":"286","line":107,"column":25,"nodeType":"287","messageId":"288","endLine":112,"endColumn":26},{"ruleId":"301","severity":1,"message":"302","line":9,"column":49,"nodeType":"303","messageId":"304","endLine":9,"endColumn":51},{"ruleId":"293","severity":1,"message":"319","line":25,"column":15,"nodeType":"299","endLine":32,"endColumn":6},{"ruleId":"293","severity":1,"message":"366","line":32,"column":8,"nodeType":"295","endLine":32,"endColumn":10,"suggestions":"367"},{"ruleId":"293","severity":1,"message":"366","line":41,"column":77,"nodeType":"295","endLine":41,"endColumn":79,"suggestions":"368"},{"ruleId":"326","severity":1,"message":"327","line":162,"column":21,"nodeType":"328","endLine":162,"endColumn":58},"no-unused-vars","'projectId' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-native-reassign",["369"],"no-negated-in-lhs",["370"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["371"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["369"],["370"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'getNewDays' and 'year'. Either include them or remove the dependency array. You can also do a functional update 'setYear(y => ...)' if you only need 'year' in the 'setYear' call.",["372"],"'useSelector' is defined but never used.",["373"],["369"],["370"],["369"],["370"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["374"],"React Hook useEffect has a missing dependency: 'renderIcon'. Either include it or remove the dependency array.",["375"],"React Hook useEffect has missing dependencies: 'setAvatar' and 'userId'. Either include them or remove the dependency array. If 'setAvatar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["376"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["377"],["378"],"'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'setTab'. Either include it or remove the dependency array. If 'setTab' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["379"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["380"],["381"],"React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["382"],"React Hook useEffect has missing dependencies: 'updateData' and 'updateTasksStatus'. Either include them or remove the dependency array.",["383"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["384"],"'UNKNOWNERROR' is defined but never used.","React Hook useEffect has a missing dependency: 'switchRoute'. Either include it or remove the dependency array.",["385"],["369"],["370"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-undef","'projectPointsReducer' is not defined.","undef",["369"],["370"],"Unexpected mix of '||' and '&&'.","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["386"],["387"],"React Hook useEffect has a missing dependency: 'isDueDate'. Either include it or remove the dependency array.",["388"],"Expected '!==' and instead saw '!='.",["369"],["370"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["389"],["390"],"no-global-assign","no-unsafe-negation",{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"391","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"391","fix":"402"},{"desc":"391","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"406","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"423","fix":"425"},"Update the dependencies array to be: [dispatch, userId]",{"range":"426","text":"427"},"Update the dependencies array to be: [getNewDays, month, year]",{"range":"428","text":"429"},{"range":"430","text":"427"},"Update the dependencies array to be: [dispatch, projectId]",{"range":"431","text":"432"},"Update the dependencies array to be: [history.location, renderIcon]",{"range":"433","text":"434"},"Update the dependencies array to be: [setAvatar, userId]",{"range":"435","text":"436"},{"range":"437","text":"427"},{"range":"438","text":"427"},"Update the dependencies array to be: [project, setTab]",{"range":"439","text":"440"},"Update the dependencies array to be: [dispatch, id]",{"range":"441","text":"442"},{"range":"443","text":"442"},"Update the dependencies array to be: [tasks, updateData]",{"range":"444","text":"445"},"Update the dependencies array to be: [canExecuteQuery, updateData, updateTasksStatus]",{"range":"446","text":"447"},"Update the dependencies array to be: [id]",{"range":"448","text":"449"},"Update the dependencies array to be: [authMethod, switchRoute]",{"range":"450","text":"451"},"Update the dependencies array to be: [type]",{"range":"452","text":"453"},"Update the dependencies array to be: [dispatch]",{"range":"454","text":"455"},"Update the dependencies array to be: [dueDate, isDueDate]",{"range":"456","text":"457"},"Update the dependencies array to be: [userId]",{"range":"458","text":"459"},{"range":"460","text":"459"},[613,615],"[dispatch, userId]",[1059,1066],"[getNewDays, month, year]",[610,612],[1395,1406],"[dispatch, projectId]",[1444,1462],"[history.location, renderIcon]",[1543,1545],"[setAvatar, userId]",[760,762],[823,825],[2033,2042],"[project, setTab]",[2109,2111],"[dispatch, id]",[2180,2182],[2229,2236],"[tasks, updateData]",[2405,2422],"[canExecuteQuery, updateData, updateTasksStatus]",[2511,2513],"[id]",[1019,1031],"[authMethod, switchRoute]",[1652,1654],"[type]",[1737,1739],"[dispatch]",[2434,2443],"[dueDate, isDueDate]",[1411,1413],"[userId]",[1658,1660]]