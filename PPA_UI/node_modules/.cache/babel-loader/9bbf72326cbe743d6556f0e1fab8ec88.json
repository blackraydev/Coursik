{"ast":null,"code":"import axios from \"axios\";\nimport { createTask, deleteTask, getTasks, updateTask } from \"../redux/tasksActions\";\nconst axiosInstance = axios.create({\n  baseURL: \"https://localhost:5001/api/tasks\"\n});\nexport const getTasksRequest = async (userId, dispatch) => {\n  return await axiosInstance.get(`/${userId}`).then(response => dispatch(getTasks(response.data))).catch(e => {\n    throw e;\n  });\n};\nexport const createTaskRequest = async (task, dispatch) => {\n  return await axiosInstance.post(\"/create\", task).then(response => dispatch(createTask(response.data))).catch(e => {\n    throw e;\n  });\n};\nexport const updateTaskRequest = async (task, dispatch) => {\n  return await axiosInstance.post(\"/update\", task).then(response => dispatch(updateTask(response.data))).catch(e => {\n    throw e;\n  });\n};\nexport const deleteTaskRequest = async (taskId, dispatch) => {\n  return await axiosInstance.delete(`/${taskId}`).then(response => dispatch(deleteTask(response.data))).catch(e => {\n    throw e;\n  });\n};","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/services/taskServices.js"],"names":["axios","createTask","deleteTask","getTasks","updateTask","axiosInstance","create","baseURL","getTasksRequest","userId","dispatch","get","then","response","data","catch","e","createTaskRequest","task","post","updateTaskRequest","deleteTaskRequest","taskId","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,QAAjC,EAA2CC,UAA3C,QAA6D,uBAA7D;AAEA,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAE;AADsB,CAAb,CAAtB;AAIA,OAAO,MAAMC,eAAe,GAAG,OAAOC,MAAP,EAAeC,QAAf,KAA4B;AACvD,SAAO,MAAML,aAAa,CAACM,GAAd,CAAmB,IAAGF,MAAO,EAA7B,EACRG,IADQ,CACFC,QAAD,IAAcH,QAAQ,CAACP,QAAQ,CAACU,QAAQ,CAACC,IAAV,CAAT,CADnB,EAERC,KAFQ,CAEFC,CAAC,IAAI;AAAE,UAAMA,CAAN;AAAS,GAFd,CAAb;AAGH,CAJM;AAMP,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,IAAP,EAAaR,QAAb,KAA0B;AACvD,SAAO,MAAML,aAAa,CAACc,IAAd,CAAmB,SAAnB,EAA8BD,IAA9B,EACRN,IADQ,CACHC,QAAQ,IAAIH,QAAQ,CAACT,UAAU,CAACY,QAAQ,CAACC,IAAV,CAAX,CADjB,EAERC,KAFQ,CAEFC,CAAC,IAAI;AAAE,UAAMA,CAAN;AAAS,GAFd,CAAb;AAGH,CAJM;AAMP,OAAO,MAAMI,iBAAiB,GAAG,OAAOF,IAAP,EAAaR,QAAb,KAA0B;AACvD,SAAO,MAAML,aAAa,CAACc,IAAd,CAAmB,SAAnB,EAA8BD,IAA9B,EACRN,IADQ,CACHC,QAAQ,IAAIH,QAAQ,CAACN,UAAU,CAACS,QAAQ,CAACC,IAAV,CAAX,CADjB,EAERC,KAFQ,CAEFC,CAAC,IAAI;AAAE,UAAMA,CAAN;AAAS,GAFd,CAAb;AAGH,CAJM;AAMP,OAAO,MAAMK,iBAAiB,GAAG,OAAOC,MAAP,EAAeZ,QAAf,KAA4B;AACzD,SAAO,MAAML,aAAa,CAACkB,MAAd,CAAsB,IAAGD,MAAO,EAAhC,EACRV,IADQ,CACHC,QAAQ,IAAIH,QAAQ,CAACR,UAAU,CAACW,QAAQ,CAACC,IAAV,CAAX,CADjB,EAERC,KAFQ,CAEFC,CAAC,IAAI;AAAE,UAAMA,CAAN;AAAS,GAFd,CAAb;AAGH,CAJM","sourcesContent":["import axios from \"axios\"\nimport { createTask, deleteTask, getTasks, updateTask } from \"../redux/tasksActions\"\n\nconst axiosInstance = axios.create({\n    baseURL: \"https://localhost:5001/api/tasks\"\n})\n\nexport const getTasksRequest = async (userId, dispatch) => {\n    return await axiosInstance.get(`/${userId}`)\n        .then((response) => dispatch(getTasks(response.data)))\n        .catch(e => { throw e })\n}\n\nexport const createTaskRequest = async (task, dispatch) => {\n    return await axiosInstance.post(\"/create\", task)\n        .then(response => dispatch(createTask(response.data)))\n        .catch(e => { throw e } );\n}\n\nexport const updateTaskRequest = async (task, dispatch) => {\n    return await axiosInstance.post(\"/update\", task)\n        .then(response => dispatch(updateTask(response.data)))\n        .catch(e => { throw e } );\n}\n\nexport const deleteTaskRequest = async (taskId, dispatch) => {\n    return await axiosInstance.delete(`/${taskId}`)\n        .then(response => dispatch(deleteTask(response.data)))\n        .catch(e => { throw e } );\n}"]},"metadata":{},"sourceType":"module"}