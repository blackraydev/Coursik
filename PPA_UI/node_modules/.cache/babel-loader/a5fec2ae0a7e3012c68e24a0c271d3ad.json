{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Tasks.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { HideTriangleIcon, ShowTriangleIcon } from \"../Common/Icons\";\nimport { TODAY, UPCOMING, LATER, NODATE, OVERDUE } from \"../../constants/taskConstants\";\nimport TaskItem from \"./TaskItem\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport \"../../styles/Tasks.css\";\n\nconst Tasks = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const tasks = useSelector(store => store);\n  const userId = sessionStorage.getItem(\"id\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getTasksRequest(userId, dispatch);\n  }, []);\n\n  const TaskHandler = ({\n    type\n  }) => {\n    _s();\n\n    const [hideTaskHandler, setHideTaskHandler] = useState(false);\n\n    const renderTasks = () => {\n      const currentDate = new Date();\n\n      if (type === OVERDUE) {\n        return tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date)).map(task => {\n          const taskDate = new Date(task.due_Date);\n          const diff = Math.ceil((taskDate - currentDate) / (1000 * 3600 * 24));\n          if (task.due_Date && diff < 0) return /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 59\n          }, this);\n        });\n      }\n\n      if (type === TODAY) {\n        return tasks.map(task => {\n          const taskDate = new Date(task.due_Date);\n          const isToday = taskDate.getDate() === currentDate.getDate() && taskDate.getMonth() === currentDate.getMonth() && taskDate.getFullYear() === currentDate.getFullYear();\n          if (isToday) return /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 41\n          }, this);\n        });\n      }\n\n      if (type === UPCOMING) {\n        return tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date)).map(task => {\n          const taskDate = new Date(task.due_Date);\n          const diff = Math.ceil((taskDate - currentDate) / (1000 * 3600 * 24));\n          if (diff > 0 && diff < 7) return /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 54\n          }, this);\n        });\n      }\n\n      if (type == LATER) {\n        return tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date)).map(task => {\n          const taskDate = new Date(task.due_Date);\n          const diff = Math.ceil((taskDate - currentDate) / (1000 * 3600 * 24));\n          if (diff >= 7) return /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 43\n          }, this);\n        });\n      }\n\n      if (type === NODATE) {\n        return tasks.map(task => !task.due_Date ? /*#__PURE__*/_jsxDEV(TaskItem, {\n          task: task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 59\n        }, this) : null);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task_handler\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title_handler\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setHideTaskHandler(!hideTaskHandler),\n          className: \"title\",\n          children: [hideTaskHandler ? /*#__PURE__*/_jsxDEV(HideTriangleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(ShowTriangleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 67\n          }, this), type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: hideTaskHandler ? \"tasks tasks-hidden\" : \"tasks\",\n        children: renderTasks()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(TaskHandler, \"PujwaJ78fcYCXu21h9WkoAFlFHE=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks_component\",\n    children: [/*#__PURE__*/_jsxDEV(TaskHandler, {\n      type: OVERDUE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskHandler, {\n      type: TODAY\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskHandler, {\n      type: UPCOMING\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskHandler, {\n      type: LATER\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskHandler, {\n      type: NODATE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Tasks, \"MHZNQ8U6UW3eW5K5TdbnCHvwlvk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Tasks.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","HideTriangleIcon","ShowTriangleIcon","TODAY","UPCOMING","LATER","NODATE","OVERDUE","TaskItem","getTasksRequest","Tasks","tasks","store","userId","sessionStorage","getItem","dispatch","TaskHandler","type","hideTaskHandler","setHideTaskHandler","renderTasks","currentDate","Date","sort","taskA","taskB","due_Date","map","task","taskDate","diff","Math","ceil","id","isToday","getDate","getMonth","getFullYear"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { HideTriangleIcon, ShowTriangleIcon } from \"../Common/Icons\";\nimport { TODAY, UPCOMING, LATER, NODATE, OVERDUE } from \"../../constants/taskConstants\";\nimport TaskItem from \"./TaskItem\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport \"../../styles/Tasks.css\";\n\nconst Tasks = () => {\n    const tasks = useSelector(store => store);\n    const userId = sessionStorage.getItem(\"id\");\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        getTasksRequest(userId, dispatch);\n    }, []);\n\n    const TaskHandler = ({ type }) => {\n        const [hideTaskHandler, setHideTaskHandler] = useState(false);\n\n        const renderTasks = () => {\n            const currentDate = new Date();\n\n            if (type === OVERDUE) {\n                return tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date))\n                            .map(task => {\n                    const taskDate = new Date(task.due_Date);\n                    const diff = Math.ceil((taskDate - currentDate) / (1000 * 3600 * 24));\n                    \n                    if (task.due_Date && diff < 0) return <TaskItem key={task.id} task={task} />\n                });\n            }\n\n            if (type === TODAY) {\n                return tasks.map(task => {\n                    const taskDate = new Date(task.due_Date);\n                    const isToday = taskDate.getDate() === currentDate.getDate() && taskDate.getMonth() === currentDate.getMonth() && taskDate.getFullYear() === currentDate.getFullYear();\n\n                    if (isToday) return <TaskItem key={task.id} task={task} />\n                });\n            }\n\n            if (type === UPCOMING) {\n                return tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date))\n                            .map(task => {\n                    const taskDate = new Date(task.due_Date);\n                    const diff = Math.ceil((taskDate - currentDate) / (1000 * 3600 * 24));\n                    \n                    if (diff > 0 && diff < 7) return <TaskItem key={task.id} task={task} />\n                });\n            }\n\n            if (type == LATER) {\n                return tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date))\n                            .map(task => {\n                    const taskDate = new Date(task.due_Date);\n                    const diff = Math.ceil((taskDate - currentDate) / (1000 * 3600 * 24));\n                    \n                    if (diff >= 7) return <TaskItem key={task.id} task={task} />\n                });\n            }\n\n            if (type === NODATE) { \n                return tasks.map(task => !task.due_Date ? <TaskItem key={task.id} task={task} /> : null);\n            }\n        }\n\n        return(\n            <div className=\"task_handler\">\n                <div className=\"title_handler\">\n                    <span onClick={() => setHideTaskHandler(!hideTaskHandler)} className=\"title\">\n                        { hideTaskHandler ? <HideTriangleIcon/> : <ShowTriangleIcon/> }\n                        { type }\n                    </span>\n                </div>\n                <div className={hideTaskHandler ? \"tasks tasks-hidden\" : \"tasks\"}>\n                    { renderTasks() }\n                </div>\n            </div>\n        );\n    }\n\n    return(\n        <div className=\"tasks_component\">\n            <TaskHandler type={OVERDUE}/>\n            <TaskHandler type={TODAY}/>\n            <TaskHandler type={UPCOMING}/>\n            <TaskHandler type={LATER}/>\n            <TaskHandler type={NODATE}/>\n        </div>\n    )\n}\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}