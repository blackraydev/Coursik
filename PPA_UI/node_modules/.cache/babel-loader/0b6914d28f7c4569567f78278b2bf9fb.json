{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Projects.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../../styles/Projects.css\";\nimport ProjectModal from \"./ProjectModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\nimport { COLLABORATIVE, YOUR } from \"../../constants/projectConstants\";\n\nconst Projects = ({\n  setTab\n}) => {\n  _s();\n\n  const userId = sessionStorage.getItem(\"id\");\n  const projects = useSelector(store => store.projects);\n  const dispatch = useDispatch();\n  const [openModal, setOpenModal] = useState(false);\n  useEffect(() => getProjectsRequest(userId, dispatch), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects_component\",\n    children: [openModal ? /*#__PURE__*/_jsxDEV(ProjectModal, {\n      closeModal: () => setOpenModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(ProjectHandler, {\n      type: YOUR,\n      title: \"Your projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectHandler, {\n      type: COLLABORATIVE,\n      title: \"Collaborative projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Projects, \"76LmdyaHYkQ77JhdRfk6PSOHVqk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Projects.jsx"],"names":["React","useEffect","useState","ProjectModal","useDispatch","useSelector","getProjectsRequest","COLLABORATIVE","YOUR","Projects","setTab","userId","sessionStorage","getItem","projects","store","dispatch","openModal","setOpenModal"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,2BAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,kCAApC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC7B,QAAMC,MAAM,GAAGC,cAAc,CAACC,OAAf,CAAuB,IAAvB,CAAf;AACA,QAAMC,QAAQ,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAMK,kBAAkB,CAACK,MAAD,EAASK,QAAT,CAAzB,EAA6C,EAA7C,CAAT;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,eACMC,SAAS,gBAAG,QAAC,YAAD;AAAc,MAAA,UAAU,EAAE,MAAMC,YAAY,CAAC,KAAD;AAA5C;AAAA;AAAA;AAAA;AAAA,YAAH,GAA6D,IAD5E,eAEI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEV,IAAtB;AAA4B,MAAA,KAAK,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAED,aAAtB;AAAqC,MAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAfD;;GAAME,Q;UAEeJ,W,EACAD,W;;;KAHfK,Q;AAiBN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../../styles/Projects.css\";\nimport ProjectModal from \"./ProjectModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\nimport { COLLABORATIVE, YOUR } from \"../../constants/projectConstants\";\n\nconst Projects = ({ setTab }) => {\n    const userId = sessionStorage.getItem(\"id\");\n    const projects = useSelector(store => store.projects);\n    const dispatch = useDispatch();\n    const [openModal, setOpenModal] = useState(false);\n\n    useEffect(() => getProjectsRequest(userId, dispatch), []);\n\n    return(\n        <div className=\"projects_component\">\n            { openModal ? <ProjectModal closeModal={() => setOpenModal(false)} /> : null }\n            <ProjectHandler type={YOUR} title=\"Your projects\"/>\n            <ProjectHandler type={COLLABORATIVE} title=\"Collaborative projects\"/>\n        </div>\n    )\n}\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}