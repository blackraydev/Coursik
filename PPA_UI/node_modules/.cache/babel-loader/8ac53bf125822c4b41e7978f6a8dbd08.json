{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport { TO_DO, IN_PROGRESS, COMPLETED } from \"../../constants/taskConstants\";\nimport TaskModal from \"../User/TaskModal\";\nimport { CREATE } from \"../../constants/modalConstants\";\nimport \"../../styles/ProjectBoard.css\";\n\nconst ProjectBoard = ({\n  setTab\n}) => {\n  _s();\n\n  const [openModal, setOpenModal] = useState(false);\n  const [category, setCategory] = useState(TO_DO);\n  const {\n    id,\n    projectId\n  } = useParams();\n  const dispatch = useDispatch();\n  const tasks = useSelector(store => store.tasks);\n  const projects = useSelector(store => store.projects);\n  const project = projects.find(proj => proj.id === Number(projectId));\n  const currentTasks = tasks.filter(task => task.project_Id === Number(projectId));\n  useEffect(async () => await getTasksRequest(id, dispatch), []);\n  useEffect(async () => await getProjectsRequest(id, dispatch), []);\n  useEffect(() => {\n    if (project) {\n      setTab(project.name);\n    }\n  }, [project]);\n\n  const boardDrop = e => {\n    e.preventDefault();\n    e.target.style.background = \"unset\";\n    const taskId = e.dataTransfer.getData(\"task_Id\");\n    const task = document.querySelector(`#${taskId}`);\n    const children = e.target.children;\n    const createTask = children[children.length - 1];\n    task.style.display = \"flex\";\n    e.target.appendChild(task);\n    e.target.appendChild(createTask);\n  };\n\n  const boardDragEnter = e => {\n    e.target.style.background = \"linear-gradient(to bottom, rgba(44, 45, 56, 1), rgba(36, 37, 45, 0.15))\";\n  };\n\n  const boardDragLeave = e => {\n    e.target.style.background = \"unset\";\n  };\n\n  const boardDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const taskDragEnd = e => {\n    e.target.style.boxShadow = \"none\";\n  };\n\n  const taskDrop = e => {// e.preventDefault();\n    // e.stopPropagation();\n  };\n\n  const taskDragLeave = e => {\n    e.target.style.boxShadow = \"none\";\n    e.target.style.background = \"rgb(65, 65, 80)\";\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const taskDragEnter = e => {\n    e.target.style.background = \"rgb(65, 65, 80)\";\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const taskDragStart = e => {\n    const target = e.target;\n    e.dataTransfer.setData(\"task_Id\", target.id);\n    setTimeout(() => {\n      target.style.display = \"none\";\n    }, 0);\n  };\n\n  const taskDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.target.className == \"project_task_item\") {\n      e.target.style.boxShadow = \"0px 10px 5px 1px rgba(0, 0, 15, .05)\";\n    }\n  };\n\n  const EmptyProjectTaskItem = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty_project_task_item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  };\n\n  const ProjectTaskItem = ({\n    task\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_task_item\",\n      draggable: true,\n      onDragEnter: taskDragEnter,\n      onDragEnd: taskDragEnd,\n      onDragLeave: taskDragLeave,\n      onDragStart: taskDragStart,\n      onDragOver: taskDragOver,\n      onDrop: taskDrop,\n      id: \"task-\" + task.id,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  };\n\n  const CreateProjectTaskItem = category => {\n    const openModalHandler = () => {\n      setOpenModal(true);\n      setCategory(category);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_project_task_item\",\n      onDrop: taskDrop,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: openModalHandler,\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderTaskModal = () => {\n    return openModal ? /*#__PURE__*/_jsxDEV(TaskModal, {\n      closeModal: () => setOpenModal(false),\n      type: CREATE,\n      category: category.category,\n      currentProject: project\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }, this) : null;\n  };\n\n  const renderBoards = () => {\n    const categories = [TO_DO, IN_PROGRESS, COMPLETED];\n    return categories.map(ctgry => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: ctgry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_tasks\",\n        onDrop: boardDrop,\n        onDragOver: boardDragOver,\n        onDragEnter: boardDragEnter,\n        onDragLeave: boardDragLeave,\n        children: [currentTasks.map(task => task.category === ctgry ? /*#__PURE__*/_jsxDEV(ProjectTaskItem, {\n          task: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 78\n        }, this) : null), /*#__PURE__*/_jsxDEV(CreateProjectTaskItem, {\n          category: ctgry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project_board\",\n    children: [renderTaskModal(), renderBoards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectBoard, \"FyuIlDzM5uCMEcupm6zRy2LFnVc=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = ProjectBoard;\nexport default ProjectBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectBoard\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectBoard.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","getProjectsRequest","getTasksRequest","TO_DO","IN_PROGRESS","COMPLETED","TaskModal","CREATE","ProjectBoard","setTab","openModal","setOpenModal","category","setCategory","id","projectId","dispatch","tasks","store","projects","project","find","proj","Number","currentTasks","filter","task","project_Id","name","boardDrop","e","preventDefault","target","style","background","taskId","dataTransfer","getData","document","querySelector","children","createTask","length","display","appendChild","boardDragEnter","boardDragLeave","boardDragOver","stopPropagation","taskDragEnd","boxShadow","taskDrop","taskDragLeave","taskDragEnter","taskDragStart","setData","setTimeout","taskDragOver","className","EmptyProjectTaskItem","ProjectTaskItem","CreateProjectTaskItem","openModalHandler","renderTaskModal","renderBoards","categories","map","ctgry"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,+BAA9C;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAO,+BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACM,KAAD,CAAxC;AACA,QAAM;AAAEW,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAoBf,SAAS,EAAnC;AACA,QAAMgB,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,KAAK,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,QAAQ,GAAGpB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA5B;AACA,QAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYS,MAAM,CAACR,SAAD,CAAxC,CAAhB;AACA,QAAMS,YAAY,GAAGP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAoBJ,MAAM,CAACR,SAAD,CAA/C,CAArB;AAEAnB,EAAAA,SAAS,CAAC,YAAY,MAAMM,eAAe,CAACY,EAAD,EAAKE,QAAL,CAAlC,EAAkD,EAAlD,CAAT;AACApB,EAAAA,SAAS,CAAC,YAAY,MAAMK,kBAAkB,CAACa,EAAD,EAAKE,QAAL,CAArC,EAAqD,EAArD,CAAT;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIwB,OAAJ,EAAa;AACTX,MAAAA,MAAM,CAACW,OAAO,CAACQ,IAAT,CAAN;AACH;AACJ,GAJQ,EAIN,CAACR,OAAD,CAJM,CAAT;;AAMA,QAAMS,SAAS,GAAGC,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,UAAf,GAA4B,OAA5B;AAEA,UAAMC,MAAM,GAAGL,CAAC,CAACM,YAAF,CAAeC,OAAf,CAAuB,SAAvB,CAAf;AACA,UAAMX,IAAI,GAAGY,QAAQ,CAACC,aAAT,CAAwB,IAAGJ,MAAO,EAAlC,CAAb;AAEA,UAAMK,QAAQ,GAAGV,CAAC,CAACE,MAAF,CAASQ,QAA1B;AACA,UAAMC,UAAU,GAAGD,QAAQ,CAACA,QAAQ,CAACE,MAAT,GAAkB,CAAnB,CAA3B;AAEAhB,IAAAA,IAAI,CAACO,KAAL,CAAWU,OAAX,GAAqB,MAArB;AAEAb,IAAAA,CAAC,CAACE,MAAF,CAASY,WAAT,CAAqBlB,IAArB;AACAI,IAAAA,CAAC,CAACE,MAAF,CAASY,WAAT,CAAqBH,UAArB;AACH,GAdD;;AAgBA,QAAMI,cAAc,GAAGf,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,UAAf,GAA4B,yEAA5B;AACH,GAFD;;AAIA,QAAMY,cAAc,GAAGhB,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,UAAf,GAA4B,OAA5B;AACH,GAFD;;AAIA,QAAMa,aAAa,GAAGjB,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACkB,eAAF;AACH,GAHD;;AAKA,QAAMC,WAAW,GAAGnB,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeiB,SAAf,GAA2B,MAA3B;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAGrB,CAAC,IAAI,CAClB;AACA;AACH,GAHD;;AAKA,QAAMsB,aAAa,GAAGtB,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeiB,SAAf,GAA2B,MAA3B;AACApB,IAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,UAAf,GAA4B,iBAA5B;AACAJ,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACkB,eAAF;AACH,GALD;;AAOA,QAAMK,aAAa,GAAGvB,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,UAAf,GAA4B,iBAA5B;AACAJ,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACkB,eAAF;AACH,GAJD;;AAMA,QAAMM,aAAa,GAAGxB,CAAC,IAAI;AACvB,UAAME,MAAM,GAAGF,CAAC,CAACE,MAAjB;AAEAF,IAAAA,CAAC,CAACM,YAAF,CAAemB,OAAf,CAAuB,SAAvB,EAAkCvB,MAAM,CAAClB,EAAzC;AAEA0C,IAAAA,UAAU,CAAC,MAAM;AACbxB,MAAAA,MAAM,CAACC,KAAP,CAAaU,OAAb,GAAuB,MAAvB;AACH,KAFS,EAEP,CAFO,CAAV;AAGH,GARD;;AAUA,QAAMc,YAAY,GAAG3B,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACkB,eAAF;;AAEA,QAAIlB,CAAC,CAACE,MAAF,CAAS0B,SAAT,IAAsB,mBAA1B,EAA+C;AAC3C5B,MAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeiB,SAAf,GAA2B,sCAA3B;AACH;AACJ,GAPD;;AASA,QAAMS,oBAAoB,GAAG,MAAM;AAC/B,wBACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD;;AAMA,QAAMC,eAAe,GAAG,CAAC;AAAElC,IAAAA;AAAF,GAAD,KAAc;AAClC,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AACK,MAAA,SAAS,EAAE,IADhB;AAEK,MAAA,WAAW,EAAE2B,aAFlB;AAGK,MAAA,SAAS,EAAEJ,WAHhB;AAIK,MAAA,WAAW,EAAEG,aAJlB;AAKK,MAAA,WAAW,EAAEE,aALlB;AAMK,MAAA,UAAU,EAAEG,YANjB;AAOK,MAAA,MAAM,EAAEN,QAPb;AAQK,MAAA,EAAE,EAAE,UAAUzB,IAAI,CAACZ,EARxB;AAAA,6BAUI;AAAA,kBAAKY,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAfD;;AAiBA,QAAMiC,qBAAqB,GAAGjD,QAAQ,IAAI;AACtC,UAAMkD,gBAAgB,GAAG,MAAM;AAC3BnD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,WAAW,CAACD,QAAD,CAAX;AACH,KAHD;;AAKA,wBACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAA0C,MAAA,MAAM,EAAEuC,QAAlD;AAAA,6BACI;AAAM,QAAA,OAAO,EAAEW,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAXD;;AAaA,QAAMC,eAAe,GAAG,MAAM;AAC1B,WACIrD,SAAS,gBAAG,QAAC,SAAD;AAAW,MAAA,UAAU,EAAE,MAAMC,YAAY,CAAC,KAAD,CAAzC;AACW,MAAA,IAAI,EAAEJ,MADjB;AAEW,MAAA,QAAQ,EAAEK,QAAQ,CAACA,QAF9B;AAGW,MAAA,cAAc,EAAEQ;AAH3B;AAAA;AAAA;AAAA;AAAA,YAAH,GAIQ,IALrB;AAOH,GARD;;AAUA,QAAM4C,YAAY,GAAG,MAAM;AACvB,UAAMC,UAAU,GAAG,CAAC9D,KAAD,EAAQC,WAAR,EAAqBC,SAArB,CAAnB;AAEA,WACI4D,UAAU,CAACC,GAAX,CAAeC,KAAK,iBAChB;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AAAA,oBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,eAAf;AACK,QAAA,MAAM,EAAEtC,SADb;AAEK,QAAA,UAAU,EAAEkB,aAFjB;AAGK,QAAA,WAAW,EAAEF,cAHlB;AAIK,QAAA,WAAW,EAAEC,cAJlB;AAAA,mBAMMtB,YAAY,CAAC0C,GAAb,CAAiBxC,IAAI,IAAIA,IAAI,CAACd,QAAL,KAAkBuD,KAAlB,gBAA0B,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEzC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAA1B,GAA4D,IAArF,CANN,eAOI,QAAC,qBAAD;AAAuB,UAAA,QAAQ,EAAGyC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAkBH,GArBD;;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACMJ,eAAe,EADrB,EAEMC,YAAY,EAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApKD;;GAAMxD,Y;UAGwBR,S,EACTF,W,EACHC,W,EACGA,W;;;KANfS,Y;AAsKN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport { TO_DO, IN_PROGRESS, COMPLETED } from \"../../constants/taskConstants\";\nimport TaskModal from \"../User/TaskModal\";\nimport { CREATE } from \"../../constants/modalConstants\";\nimport \"../../styles/ProjectBoard.css\";\n\nconst ProjectBoard = ({ setTab }) => {\n    const [openModal, setOpenModal] = useState(false);\n    const [category, setCategory] = useState(TO_DO);\n    const { id, projectId } = useParams();\n    const dispatch = useDispatch();\n    const tasks = useSelector(store => store.tasks);\n    const projects = useSelector(store => store.projects);\n    const project = projects.find(proj => proj.id === Number(projectId));\n    const currentTasks = tasks.filter(task => task.project_Id === Number(projectId));\n\n    useEffect(async () => await getTasksRequest(id, dispatch), []);\n    useEffect(async () => await getProjectsRequest(id, dispatch), []);\n\n    useEffect(() => {\n        if (project) {\n            setTab(project.name);\n        }\n    }, [project]);\n\n    const boardDrop = e => {\n        e.preventDefault();\n        e.target.style.background = \"unset\";\n\n        const taskId = e.dataTransfer.getData(\"task_Id\");\n        const task = document.querySelector(`#${taskId}`);\n\n        const children = e.target.children;\n        const createTask = children[children.length - 1];\n\n        task.style.display = \"flex\";\n\n        e.target.appendChild(task);\n        e.target.appendChild(createTask);\n    }\n\n    const boardDragEnter = e => {\n        e.target.style.background = \"linear-gradient(to bottom, rgba(44, 45, 56, 1), rgba(36, 37, 45, 0.15))\";\n    }\n\n    const boardDragLeave = e => {\n        e.target.style.background = \"unset\";\n    }\n\n    const boardDragOver = e => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const taskDragEnd = e => {\n        e.target.style.boxShadow = \"none\";\n    }\n\n    const taskDrop = e => {\n        // e.preventDefault();\n        // e.stopPropagation();\n    }\n\n    const taskDragLeave = e => {\n        e.target.style.boxShadow = \"none\";\n        e.target.style.background = \"rgb(65, 65, 80)\";\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const taskDragEnter = e => {\n        e.target.style.background = \"rgb(65, 65, 80)\";\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const taskDragStart = e => {\n        const target = e.target;\n\n        e.dataTransfer.setData(\"task_Id\", target.id);\n\n        setTimeout(() => {\n            target.style.display = \"none\";\n        }, 0);\n    }\n    \n    const taskDragOver = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (e.target.className == \"project_task_item\") {\n            e.target.style.boxShadow = \"0px 10px 5px 1px rgba(0, 0, 15, .05)\";\n        }\n    }\n\n    const EmptyProjectTaskItem = () => {\n        return(\n            <div className=\"empty_project_task_item\"></div>\n        )\n    }\n\n    const ProjectTaskItem = ({ task }) => {\n        return(\n            <div className=\"project_task_item\"\n                 draggable={true}\n                 onDragEnter={taskDragEnter}\n                 onDragEnd={taskDragEnd}\n                 onDragLeave={taskDragLeave}\n                 onDragStart={taskDragStart}\n                 onDragOver={taskDragOver}\n                 onDrop={taskDrop}\n                 id={\"task-\" + task.id}\n            >\n                <p>{ task.name }</p>\n            </div>\n        )\n    }\n\n    const CreateProjectTaskItem = category => {\n        const openModalHandler = () => {\n            setOpenModal(true);\n            setCategory(category);\n        }\n        \n        return(\n            <div className=\"create_project_task_item\" onDrop={taskDrop}>\n                <span onClick={openModalHandler}>Add task</span>\n            </div>\n        )\n    }\n\n    const renderTaskModal = () => {\n        return(\n            openModal ? <TaskModal closeModal={() => setOpenModal(false)} \n                                   type={CREATE} \n                                   category={category.category}\n                                   currentProject={project} \n                        /> : null \n        )\n    }\n\n    const renderBoards = () => {\n        const categories = [TO_DO, IN_PROGRESS, COMPLETED];\n\n        return (\n            categories.map(ctgry => \n                <div className=\"board\">\n                    <div className=\"project_title\">\n                        <span>{ ctgry }</span>\n                    </div>\n                    <div className=\"project_tasks\"\n                         onDrop={boardDrop}\n                         onDragOver={boardDragOver}\n                         onDragEnter={boardDragEnter}\n                         onDragLeave={boardDragLeave}\n                    >\n                        { currentTasks.map(task => task.category === ctgry ? <ProjectTaskItem task={task} /> : null) }\n                        <CreateProjectTaskItem category={ ctgry }/>\n                    </div>\n                </div>\n            )\n        )\n    }\n\n    return(\n        <div className=\"project_board\">\n            { renderTaskModal() }\n            { renderBoards() }\n        </div>\n    )\n}\n\nexport default ProjectBoard;\n"]},"metadata":{},"sourceType":"module"}