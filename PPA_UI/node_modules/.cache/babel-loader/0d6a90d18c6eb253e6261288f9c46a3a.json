{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectBoard.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport { TO_DO, IN_PROGRESS, COMPLETED } from \"../../constants/taskConstants\";\nimport TaskModal from \"../User/TaskModal\";\nimport \"../../styles/ProjectBoard.css\";\nimport { CREATE } from \"../../constants/modalConstants\";\n\nconst ProjectBoard = ({\n  setTab\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    id,\n    projectId\n  } = useParams();\n  const dispatch = useDispatch();\n  const tasks = useSelector(store => store.tasks);\n  const projects = useSelector(store => store.projects);\n  const project = projects.find(proj => proj.id === Number(projectId));\n  const currentTasks = tasks.filter(task => task.project_Id === Number(projectId));\n  useEffect(async () => await getTasksRequest(id, dispatch), []);\n  useEffect(async () => await getProjectsRequest(id, dispatch), []);\n  useEffect(() => {\n    if (project) {\n      setTab(project.name);\n    }\n  }, [project]);\n\n  const ProjectTaskItem = ({\n    name\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_task_item\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  };\n\n  const CreateProjectTaskItem = category => {\n    _s();\n\n    const [openModal, setOpenModal] = useState(false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_project_task_item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setOpenModal(true),\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), openModal ? /*#__PURE__*/_jsxDEV(TaskModal, {\n        closeModal: () => setOpenModal(false),\n        type: CREATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 31\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(CreateProjectTaskItem, \"uYk1wngonhmNAAo8U/frFfYvuzQ=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project_board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column col-todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: TO_DO\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_tasks\",\n        children: [currentTasks.map(task => task.category === TO_DO ? /*#__PURE__*/_jsxDEV(ProjectTaskItem, {\n          name: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 74\n        }, this) : null), /*#__PURE__*/_jsxDEV(CreateProjectTaskItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column col-doing\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: IN_PROGRESS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_tasks\",\n        children: [currentTasks.map(task => task.category === IN_PROGRESS ? /*#__PURE__*/_jsxDEV(ProjectTaskItem, {\n          name: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 80\n        }, this) : null), /*#__PURE__*/_jsxDEV(CreateProjectTaskItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column col-done\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: COMPLETED\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_tasks\",\n        children: [currentTasks.map(task => task.category === COMPLETED ? /*#__PURE__*/_jsxDEV(ProjectTaskItem, {\n          name: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 78\n        }, this) : null), /*#__PURE__*/_jsxDEV(CreateProjectTaskItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ProjectBoard, \"/lEcZesApDyjaPQvB+7okcMeJyE=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = ProjectBoard;\nexport default ProjectBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectBoard\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectBoard.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","getProjectsRequest","getTasksRequest","TO_DO","IN_PROGRESS","COMPLETED","TaskModal","CREATE","ProjectBoard","setTab","id","projectId","dispatch","tasks","store","projects","project","find","proj","Number","currentTasks","filter","task","project_Id","name","ProjectTaskItem","CreateProjectTaskItem","category","openModal","setOpenModal","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport { TO_DO, IN_PROGRESS, COMPLETED } from \"../../constants/taskConstants\";\nimport TaskModal from \"../User/TaskModal\";\nimport \"../../styles/ProjectBoard.css\";\nimport { CREATE } from \"../../constants/modalConstants\";\n\nconst ProjectBoard = ({ setTab }) => {\n    const { id, projectId } = useParams();\n    const dispatch = useDispatch();\n    const tasks = useSelector(store => store.tasks);\n    const projects = useSelector(store => store.projects);\n    const project = projects.find(proj => proj.id === Number(projectId));\n    const currentTasks = tasks.filter(task => task.project_Id === Number(projectId));\n\n    useEffect(async () => await getTasksRequest(id, dispatch), []);\n    useEffect(async () => await getProjectsRequest(id, dispatch), []);\n\n    useEffect(() => {\n        if (project) {\n            setTab(project.name);\n        }\n    }, [project]);\n\n    const ProjectTaskItem = ({ name }) => {\n        return(\n            <div className=\"project_task_item\">\n                <p>{ name }</p>\n            </div>\n        )\n    }\n\n    const CreateProjectTaskItem = category => {\n        const [openModal, setOpenModal] = useState(false);\n\n        return(\n            <div className=\"create_project_task_item\">\n                <span onClick={() => setOpenModal(true)}>Add task</span>\n                { openModal ? <TaskModal closeModal={() => setOpenModal(false)} type={CREATE}/> : null }\n            </div>\n        )\n    }\n\n    return(\n        <div className=\"project_board\">\n            <div className=\"column col-todo\">\n                <div className=\"project_title\">\n                    <span>{ TO_DO }</span>\n                </div>\n                <div className=\"project_tasks\">\n                    { currentTasks.map(task => task.category === TO_DO ? <ProjectTaskItem name={task.name} /> : null) }\n                    <CreateProjectTaskItem/>\n                </div>\n            </div>\n            <div className=\"column col-doing\">\n                <div className=\"project_title\">\n                    <span>{ IN_PROGRESS }</span>\n                </div>\n                <div className=\"project_tasks\">\n                    { currentTasks.map(task => task.category === IN_PROGRESS ? <ProjectTaskItem name={task.name} /> : null) }\n                    <CreateProjectTaskItem/>\n                </div>\n            </div>\n            <div className=\"column col-done\">\n                <div className=\"project_title\">\n                    <span>{ COMPLETED }</span>\n                </div>\n                <div className=\"project_tasks\">\n                    { currentTasks.map(task => task.category === COMPLETED ? <ProjectTaskItem name={task.name} /> : null) }\n                    <CreateProjectTaskItem/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectBoard;"]},"metadata":{},"sourceType":"module"}