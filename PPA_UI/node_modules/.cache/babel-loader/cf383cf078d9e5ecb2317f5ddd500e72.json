{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectPointsModal.jsx\",\n    _s3 = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { TEXTBOX, TEXTAREA } from \"../../constants/projectPointConstants\";\nimport { UpdateProjectPointsRequest } from \"../../services/projectPointServices\";\nimport { deleteProjectRequest } from \"../../services/projectServices\";\nimport \"../../styles/ProjectPointsModal.css\";\n\nconst ProjectPointsModal = ({\n  values,\n  closeModal\n}) => {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const history = useHistory();\n  const userId = sessionStorage.getItem(\"id\");\n  const dispatch = useDispatch();\n  const inputs = [];\n\n  const TextBox = ({\n    projectPoint\n  }) => {\n    _s();\n\n    const [value, setValue] = useState(projectPoint.value);\n    const ref = useRef();\n    inputs.push(ref);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: [projectPoint.title, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        className: \"line\",\n        onChange: e => setValue(e.target.value),\n        ref: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(TextBox, \"JFAPQy7+EY1NhKWXeEYtvqLmCM8=\");\n\n  const TextArea = ({\n    projectPoint\n  }) => {\n    _s2();\n\n    const [value, setValue] = useState(projectPoint.value);\n    const ref = useRef();\n    inputs.push(ref);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: [projectPoint.title, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: value,\n        className: \"box\",\n        onChange: e => setValue(e.target.value),\n        ref: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s2(TextArea, \"JFAPQy7+EY1NhKWXeEYtvqLmCM8=\");\n\n  const submitUpdating = async () => {\n    const result = inputs.filter(input => input.current);\n    const projectPoints = [];\n    values.forEach(value => {\n      const projectPoint = {\n        id: value.id,\n        project_Id: value.project_Id,\n        type: value.type,\n        title: value.title,\n        value: value.value\n      };\n      projectPoints.push(projectPoint);\n    });\n\n    for (let i = 0; i < values.length; i++) {\n      projectPoints[i].value = result[i].current.value;\n    }\n\n    return await UpdateProjectPointsRequest(projectPoints, dispatch).then(res => closeModal()).catch(e => console.log(e));\n  };\n\n  const deleteProject = async () => {\n    const projectId = values[0].project_Id;\n    return await deleteProjectRequest(projectId, dispatch).then(res => {\n      closeModal();\n      redirectToProjects();\n    }).catch(e => console.log(e));\n  };\n\n  const redirectToProjects = () => history.push(`/home/${userId}/projects`);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project_points_modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal_window\",\n      children: [values.map(value => {\n        switch (value.type) {\n          case TEXTBOX:\n            return /*#__PURE__*/_jsxDEV(TextBox, {\n              projectPoint: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 40\n            }, this);\n\n          case TEXTAREA:\n            return /*#__PURE__*/_jsxDEV(TextArea, {\n              projectPoint: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 40\n            }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit_part\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteProject,\n          className: \"delete_project\",\n          children: \"Delete Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitUpdating,\n          className: \"update_info\",\n          children: \"Update Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: closeModal,\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(ProjectPointsModal, \"ztFVC0/0rI8de3REyGzb7ruuLNE=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = ProjectPointsModal;\nexport default ProjectPointsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectPointsModal\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectPointsModal.jsx"],"names":["React","useRef","useState","useDispatch","useHistory","TEXTBOX","TEXTAREA","UpdateProjectPointsRequest","deleteProjectRequest","ProjectPointsModal","values","closeModal","history","userId","sessionStorage","getItem","dispatch","inputs","TextBox","projectPoint","value","setValue","ref","push","title","e","target","TextArea","submitUpdating","result","filter","input","current","projectPoints","forEach","id","project_Id","type","i","length","then","res","catch","console","log","deleteProject","projectId","redirectToProjects","map"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { TEXTBOX, TEXTAREA } from \"../../constants/projectPointConstants\";\nimport { UpdateProjectPointsRequest } from \"../../services/projectPointServices\";\nimport { deleteProjectRequest } from \"../../services/projectServices\";\nimport \"../../styles/ProjectPointsModal.css\";\n\nconst ProjectPointsModal = ({ values, closeModal }) => {\n    const history = useHistory();\n    const userId = sessionStorage.getItem(\"id\");\n    const dispatch = useDispatch();\n    const inputs = [];\n\n    const TextBox = ({ projectPoint }) => {\n        const [value, setValue] = useState(projectPoint.value);\n        const ref = useRef();\n\n        inputs.push(ref);\n\n        return(\n            <div className=\"textbox\">\n                <span className=\"title\">{projectPoint.title}:</span>\n                <input value={ value }\n                       className=\"line\"\n                       onChange={e => setValue(e.target.value)}\n                       ref={ref}\n                />\n            </div>\n        )\n    }\n\n    const TextArea = ({ projectPoint }) => {\n        const [value, setValue] = useState(projectPoint.value);\n        const ref = useRef();\n\n        inputs.push(ref);\n\n        return(\n            <div className=\"textarea\">\n                <span className=\"title\">{projectPoint.title}:</span>\n                <textarea value={ value }\n                          className=\"box\"\n                          onChange={e => setValue(e.target.value)}\n                          ref={ref}\n                />\n            </div>\n        )\n    }\n\n    const submitUpdating = async () => {\n        const result = inputs.filter(input => input.current);\n        const projectPoints = [];\n\n        values.forEach(value => {\n            const projectPoint = {\n                id: value.id,\n                project_Id: value.project_Id,\n                type: value.type,\n                title: value.title,\n                value: value.value\n            }\n            \n            projectPoints.push(projectPoint);\n        })\n\n        for (let i = 0; i < values.length; i++) {\n            projectPoints[i].value = result[i].current.value;\n        }\n\n        return await UpdateProjectPointsRequest(projectPoints, dispatch)\n            .then(res => closeModal())\n            .catch(e => console.log(e))\n    }\n\n    const deleteProject = async () => {\n        const projectId = values[0].project_Id;\n        return await deleteProjectRequest(projectId, dispatch)\n            .then(res => {\n                closeModal();\n                redirectToProjects();\n            })\n            .catch(e => console.log(e))\n    }\n\n    const redirectToProjects = () => history.push(`/home/${userId}/projects`);\n\n    return(\n        <div className=\"project_points_modal\">\n            <div className=\"modal_window\">\n                { \n                    values.map(value => {\n                        switch (value.type) {\n                            case TEXTBOX:\n                                return <TextBox projectPoint={value} />;\n                            case TEXTAREA:\n                                return <TextArea projectPoint={value} />;\n                        }\n                    }) \n                }\n                <div className=\"submit_part\">\n                    <button onClick={deleteProject} className=\"delete_project\">\n                        Delete Project\n                    </button>\n                    <button onClick={submitUpdating} className=\"update_info\">\n                        Update Info\n                    </button>\n                </div>\n            </div>\n            <div onClick={ closeModal } className=\"overlay\"></div>\n        </div>\n    )\n}\n\nexport default ProjectPointsModal;"]},"metadata":{},"sourceType":"module"}