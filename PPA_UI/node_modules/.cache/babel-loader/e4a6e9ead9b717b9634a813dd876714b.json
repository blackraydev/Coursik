{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport { TO_DO, IN_PROGRESS, COMPLETED } from \"../../constants/taskConstants\";\nimport TaskModal from \"../User/TaskModal\";\nimport { CREATE } from \"../../constants/modalConstants\";\nimport \"../../styles/ProjectBoard.css\";\n\nconst ProjectBoard = ({\n  setTab\n}) => {\n  _s();\n\n  const [openModal, setOpenModal] = useState(false);\n  const [category, setCategory] = useState(TO_DO);\n  const {\n    id,\n    projectId\n  } = useParams();\n  const dispatch = useDispatch();\n  const tasks = useSelector(store => store.tasks);\n  const projects = useSelector(store => store.projects);\n  const project = projects.find(proj => proj.id === Number(projectId));\n  const currentTasks = tasks.filter(task => task.project_Id === Number(projectId));\n  useEffect(async () => await getTasksRequest(id, dispatch), []);\n  useEffect(async () => await getProjectsRequest(id, dispatch), []);\n  useEffect(() => {\n    if (project) {\n      setTab(project.name);\n    }\n  }, [project]);\n\n  const boardDrop = e => {\n    e.preventDefault();\n    e.target.style.background = \"unset\";\n    const taskId = e.dataTransfer.getData(\"task_Id\");\n    const task = document.querySelector(`#${taskId}`);\n    const children = e.target.children;\n    const createTask = children[children.length - 1];\n    const emptyTask = children[children.length - 2];\n    task.style.display = \"flex\";\n    emptyTask.style.display = \"none\";\n    e.target.appendChild(task);\n    e.target.appendChild(emptyTask);\n    e.target.appendChild(createTask);\n  };\n\n  const boardDragEnter = e => {\n    const children = e.target.children;\n    const createTask = children[children.length - 1];\n    const emptyTask = children[children.length - 2];\n\n    if (emptyTask) {\n      setTimeout(() => {\n        emptyTask.style.display = \"flex\";\n        emptyTask.style.background = \"rgba(30, 30, 40, .5)\";\n        e.target.style.background = \"linear-gradient(to bottom, rgba(44, 45, 56, 1), rgba(36, 37, 45, 0.15))\";\n        e.target.appendChild(emptyTask);\n        e.target.appendChild(createTask);\n      }, 0);\n    }\n  };\n\n  const boardDragLeave = e => {\n    const children = e.target.children;\n    const emptyTask = children[children.length - 2];\n\n    if (emptyTask) {\n      emptyTask.style.display = \"none\";\n    }\n\n    e.target.style.background = \"unset\";\n  };\n\n  const boardDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const taskDragEnd = e => {\n    e.target.style.display = \"flex\";\n    e.target.style.boxShadow = \"none\";\n  };\n\n  const taskDrop = e => {\n    const className = e.target.classList[1];\n    const firstIndex = className.indexOf(\"-\");\n    const lastIndex = className.lastIndexOf(\"-\");\n    const firstString = className.substring(0, firstIndex);\n    const secondString = className.substring(lastIndex, className.length);\n    const boardString = firstString + secondString;\n    const board = document.querySelector(`#${boardString}`);\n    e.target = board;\n    boardDrop(e);\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const taskDragLeave = e => {\n    e.target.style.boxShadow = \"none\";\n    const className = e.target.classList[1];\n\n    if (className) {\n      const firstIndex = className.indexOf(\"-\");\n      const lastIndex = className.lastIndexOf(\"-\");\n      const firstString = className.substring(0, firstIndex);\n      const secondString = className.substring(lastIndex, className.length);\n      const boardString = firstString + secondString;\n      const board = document.querySelector(`#${boardString}`);\n      e.target = board;\n      boardDragLeave(e);\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const taskDragEnter = e => {\n    const className = e.target.classList[1];\n\n    if (className) {\n      const firstIndex = className.indexOf(\"-\");\n      const lastIndex = className.lastIndexOf(\"-\");\n      const firstString = className.substring(0, firstIndex);\n      const secondString = className.substring(lastIndex, className.length);\n      const boardString = firstString + secondString;\n      const board = document.querySelector(`#${boardString}`);\n      console.log(board);\n      e.target = board;\n      boardDragEnter(e);\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const taskDragStart = e => {\n    const target = e.target;\n    e.dataTransfer.setData(\"task_Id\", target.id);\n    setTimeout(() => {\n      target.style.display = \"none\";\n    }, 0);\n  };\n\n  const taskDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.target.className == \"project_task_item\") {\n      e.target.style.boxShadow = \"0px 10px 5px 1px rgba(0, 0, 15, .05)\";\n    }\n  };\n\n  const EmptyProjectTaskItem = ({\n    boardId\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `empty_project_task_item ${boardId}`,\n      onDragEnter: taskDragEnter,\n      onDragLeave: taskDragLeave,\n      onDrop: taskDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this);\n  };\n\n  const ProjectTaskItem = ({\n    boardId,\n    task\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `project_task_item ${boardId}`,\n      draggable: true,\n      onDragEnter: taskDragEnter,\n      onDragEnd: taskDragEnd,\n      onDragLeave: taskDragLeave,\n      onDragStart: taskDragStart,\n      onDragOver: taskDragOver,\n      onDrop: taskDrop,\n      id: \"task-\" + task.id,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `task-name ${boardId}`,\n        onDragEnter: taskDragEnter,\n        onDragLeave: taskDragLeave,\n        onDrop: taskDrop,\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this);\n  };\n\n  const CreateProjectTaskItem = ({\n    boardId,\n    category\n  }) => {\n    const openModalHandler = () => {\n      setOpenModal(true);\n      setCategory(category);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `create_project_task_item ${boardId}`,\n      onDragEnter: taskDragEnter,\n      onDragLeave: taskDragLeave,\n      onDrop: taskDrop,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: openModalHandler,\n        onDragEnter: taskDragEnter,\n        onDragLeave: taskDragLeave,\n        onDrop: taskDrop,\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderTaskModal = () => {\n    return openModal ? /*#__PURE__*/_jsxDEV(TaskModal, {\n      closeModal: () => setOpenModal(false),\n      type: CREATE,\n      category: category.category,\n      currentProject: project\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }, this) : null;\n  };\n\n  const renderBoards = () => {\n    const categories = [TO_DO, IN_PROGRESS, COMPLETED];\n    return categories.map((ctgry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: ctgry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_tasks\",\n        id: \"board-\" + index,\n        onDrop: boardDrop,\n        onDragOver: boardDragOver,\n        onDragEnter: boardDragEnter,\n        onDragLeave: boardDragLeave,\n        children: [currentTasks.map(task => task.category === ctgry ? /*#__PURE__*/_jsxDEV(ProjectTaskItem, {\n          boardId: \"board-task-\" + index,\n          task: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 78\n        }, this) : null), /*#__PURE__*/_jsxDEV(EmptyProjectTaskItem, {\n          boardId: \"board-empty-task-\" + index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CreateProjectTaskItem, {\n          boardId: \"board-create-task-\" + index,\n          category: ctgry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project_board\",\n    children: [renderTaskModal(), renderBoards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectBoard, \"FyuIlDzM5uCMEcupm6zRy2LFnVc=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = ProjectBoard;\nexport default ProjectBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectBoard\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectBoard.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","getProjectsRequest","getTasksRequest","TO_DO","IN_PROGRESS","COMPLETED","TaskModal","CREATE","ProjectBoard","setTab","openModal","setOpenModal","category","setCategory","id","projectId","dispatch","tasks","store","projects","project","find","proj","Number","currentTasks","filter","task","project_Id","name","boardDrop","e","preventDefault","target","style","background","taskId","dataTransfer","getData","document","querySelector","children","createTask","length","emptyTask","display","appendChild","boardDragEnter","setTimeout","boardDragLeave","boardDragOver","stopPropagation","taskDragEnd","boxShadow","taskDrop","className","classList","firstIndex","indexOf","lastIndex","lastIndexOf","firstString","substring","secondString","boardString","board","taskDragLeave","taskDragEnter","console","log","taskDragStart","setData","taskDragOver","EmptyProjectTaskItem","boardId","ProjectTaskItem","CreateProjectTaskItem","openModalHandler","renderTaskModal","renderBoards","categories","map","ctgry","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport { TO_DO, IN_PROGRESS, COMPLETED } from \"../../constants/taskConstants\";\nimport TaskModal from \"../User/TaskModal\";\nimport { CREATE } from \"../../constants/modalConstants\";\nimport \"../../styles/ProjectBoard.css\";\n\nconst ProjectBoard = ({ setTab }) => {\n    const [openModal, setOpenModal] = useState(false);\n    const [category, setCategory] = useState(TO_DO);\n    const { id, projectId } = useParams();\n    const dispatch = useDispatch();\n    const tasks = useSelector(store => store.tasks);\n    const projects = useSelector(store => store.projects);\n    const project = projects.find(proj => proj.id === Number(projectId));\n    const currentTasks = tasks.filter(task => task.project_Id === Number(projectId));\n\n    useEffect(async () => await getTasksRequest(id, dispatch), []);\n    useEffect(async () => await getProjectsRequest(id, dispatch), []);\n\n    useEffect(() => {\n        if (project) {\n            setTab(project.name);\n        }\n    }, [project]);\n\n    const boardDrop = e => {\n        e.preventDefault();\n        e.target.style.background = \"unset\";\n\n        const taskId = e.dataTransfer.getData(\"task_Id\");\n        const task = document.querySelector(`#${taskId}`);\n\n        const children = e.target.children;\n        const createTask = children[children.length - 1];\n        const emptyTask = children[children.length - 2];\n\n        task.style.display = \"flex\";\n        emptyTask.style.display = \"none\";\n\n        e.target.appendChild(task);\n        e.target.appendChild(emptyTask);\n        e.target.appendChild(createTask);\n    }\n\n    const boardDragEnter = e => {\n        const children = e.target.children;\n        const createTask = children[children.length - 1];\n        const emptyTask = children[children.length - 2];\n\n        if (emptyTask) {\n            setTimeout(() => {\n                emptyTask.style.display = \"flex\";\n                emptyTask.style.background = \"rgba(30, 30, 40, .5)\";\n                e.target.style.background = \"linear-gradient(to bottom, rgba(44, 45, 56, 1), rgba(36, 37, 45, 0.15))\";\n                e.target.appendChild(emptyTask);\n                e.target.appendChild(createTask);\n            }, 0);\n        }\n    }\n\n    const boardDragLeave = e => {\n        const children = e.target.children;\n        const emptyTask = children[children.length - 2];\n\n        if (emptyTask) {\n            emptyTask.style.display = \"none\";\n        }\n\n        e.target.style.background = \"unset\";\n    }\n\n    const boardDragOver = e => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const taskDragEnd = e => {\n        e.target.style.display = \"flex\";\n        e.target.style.boxShadow = \"none\";\n    }\n\n    const taskDrop = e => {\n        const className = e.target.classList[1];\n\n        const firstIndex = className.indexOf(\"-\");\n        const lastIndex = className.lastIndexOf(\"-\");\n        const firstString = className.substring(0, firstIndex);\n        const secondString = className.substring(lastIndex, className.length);\n        const boardString = firstString + secondString;\n\n        const board = document.querySelector(`#${boardString}`);\n        \n        e.target = board;\n        boardDrop(e);\n\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const taskDragLeave = e => {\n        e.target.style.boxShadow = \"none\";\n        const className = e.target.classList[1];\n\n        if (className) {\n            const firstIndex = className.indexOf(\"-\");\n            const lastIndex = className.lastIndexOf(\"-\");\n            const firstString = className.substring(0, firstIndex);\n            const secondString = className.substring(lastIndex, className.length);\n            const boardString = firstString + secondString;\n    \n            const board = document.querySelector(`#${boardString}`);\n            \n            e.target = board;\n            boardDragLeave(e);\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const taskDragEnter = e => {\n        const className = e.target.classList[1];\n\n        if (className) {\n            const firstIndex = className.indexOf(\"-\");\n            const lastIndex = className.lastIndexOf(\"-\");\n            const firstString = className.substring(0, firstIndex);\n            const secondString = className.substring(lastIndex, className.length);\n            const boardString = firstString + secondString;\n    \n            const board = document.querySelector(`#${boardString}`);\n            console.log(board);\n            e.target = board;\n            boardDragEnter(e);\n        }\n        \n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const taskDragStart = e => {\n        const target = e.target;\n\n        e.dataTransfer.setData(\"task_Id\", target.id);\n\n        setTimeout(() => {\n            target.style.display = \"none\";\n        }, 0);\n    }\n    \n    const taskDragOver = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (e.target.className == \"project_task_item\") {\n            e.target.style.boxShadow = \"0px 10px 5px 1px rgba(0, 0, 15, .05)\";\n        }\n    }\n\n    const EmptyProjectTaskItem = ({ boardId }) => {\n        return(\n            <div className={`empty_project_task_item ${boardId}`}\n                 onDragEnter={taskDragEnter}\n                 onDragLeave={taskDragLeave}\n                 onDrop={taskDrop}\n            >\n            </div>\n        )\n    }\n\n    const ProjectTaskItem = ({ boardId, task }) => {\n        return(\n            <div className={`project_task_item ${boardId}`}\n                 draggable={true}\n                 onDragEnter={taskDragEnter}\n                 onDragEnd={taskDragEnd}\n                 onDragLeave={taskDragLeave}\n                 onDragStart={taskDragStart}\n                 onDragOver={taskDragOver}\n                 onDrop={taskDrop}\n                 id={\"task-\" + task.id}\n            >\n                <p className={`task-name ${boardId}`}\n                   onDragEnter={taskDragEnter}\n                   onDragLeave={taskDragLeave}\n                   onDrop={taskDrop}\n                >{ task.name }</p>\n            </div>\n        )\n    }\n\n    const CreateProjectTaskItem = ({ boardId, category }) => {\n        const openModalHandler = () => {\n            setOpenModal(true);\n            setCategory(category);\n        }\n        \n        return(\n            <div className={`create_project_task_item ${boardId}`}\n                 onDragEnter={taskDragEnter}\n                 onDragLeave={taskDragLeave}\n                 onDrop={taskDrop}\n            >\n                <span onClick={openModalHandler}\n                      onDragEnter={taskDragEnter}\n                      onDragLeave={taskDragLeave}\n                      onDrop={taskDrop}\n                >Add task</span>\n            </div>\n        )\n    }\n\n    const renderTaskModal = () => {\n        return(\n            openModal ? <TaskModal closeModal={() => setOpenModal(false)} \n                                   type={CREATE} \n                                   category={category.category}\n                                   currentProject={project} \n                        /> : null \n        )\n    }\n\n    const renderBoards = () => {\n        const categories = [TO_DO, IN_PROGRESS, COMPLETED];\n\n        return (\n            categories.map((ctgry, index) => \n                <div className=\"board\">\n                    <div className=\"project_title\">\n                        <span>{ ctgry }</span>\n                    </div>\n                    <div className=\"project_tasks\"\n                         id={\"board-\" + index}\n                         onDrop={boardDrop}\n                         onDragOver={boardDragOver}\n                         onDragEnter={boardDragEnter}\n                         onDragLeave={boardDragLeave}\n                    >\n                        { currentTasks.map(task => task.category === ctgry ? <ProjectTaskItem boardId={\"board-task-\" + index} task={task} /> : null) }\n                        <EmptyProjectTaskItem boardId={\"board-empty-task-\" + index}/>\n                        <CreateProjectTaskItem boardId={\"board-create-task-\" + index} category={ ctgry }/>\n                    </div>\n                </div>\n            )\n        )\n    }\n\n    return(\n        <div className=\"project_board\">\n            { renderTaskModal() }\n            { renderBoards() }\n        </div>\n    )\n}\n\nexport default ProjectBoard;\n"]},"metadata":{},"sourceType":"module"}