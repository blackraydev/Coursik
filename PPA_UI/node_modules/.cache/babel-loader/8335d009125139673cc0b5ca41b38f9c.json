{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { DATACHANGE, PASSWORDCHANGE } from \"../../constants/authConstants\";\nimport { MINPASSWORDLENGTH, NOERROR, PASSWORDDONTMATCH } from \"../../constants/errorConstants\";\nimport { getRequest, updateRequest } from \"../../services/authServices\";\nimport \"../../styles/Profile.css\";\nimport { HideIcon, ShowIcon } from \"../Common/Icons\";\n\nconst Profile = () => {\n  _s();\n\n  const userId = sessionStorage.getItem(\"id\");\n  const [surname, setSurname] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [patronymic, setPatronymic] = useState(\"\");\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState(NOERROR);\n  const [avatar, setAvatar] = useState(null);\n  const inputFile = useRef(null);\n  useEffect(async () => {\n    await getRequest(userId).then(user => {\n      setSurname(user.surname);\n      setName(user.name);\n      setPatronymic(user.patronymic);\n      setLogin(user.login);\n    });\n  }, []);\n\n  const showError = e => {\n    setError(e);\n    return true;\n  };\n\n  const hideError = () => {\n    setError(NOERROR);\n    return false;\n  };\n\n  const isError = type => {\n    if (type === PASSWORDCHANGE) {\n      if (password.length < 6) {\n        return showError(MINPASSWORDLENGTH);\n      } else if (password !== repeatPassword) {\n        return showError(PASSWORDDONTMATCH);\n      }\n    }\n\n    return hideError();\n  };\n\n  const updateProfileHandler = async type => {\n    if (!isError(type)) {\n      return await getRequest(userId).then(async user => {\n        let updatedUser;\n\n        if (type === PASSWORDCHANGE) {\n          updatedUser = { ...user,\n            password\n          };\n        } else if (type === DATACHANGE) {\n          updatedUser = { ...user,\n            surname,\n            name,\n            patronymic\n          };\n        }\n\n        return await updateRequest(updatedUser).then(data => data).catch(e => console.log(e));\n      }).catch(e => console.log(e));\n    }\n  };\n\n  const updatePhotoHandler = () => {\n    inputFile.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person_data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setSurname(e.target.value),\n        value: surname,\n        placeholder: \"Surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setName(e.target.value),\n        value: name,\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setPatronymic(e.target.value),\n        value: patronymic,\n        placeholder: \"Patronymic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"avatar_choose\",\n        type: \"file\",\n        ref: inputFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"confirm\",\n        onClick: updatePhotoHandler,\n        children: \"Upload photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateProfileHandler(DATACHANGE),\n        className: \"confirm\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile_data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error_holder\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: true,\n        value: login,\n        onChange: e => setLogin(e.target.value),\n        placeholder: \"Login\",\n        className: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: showPassword ? \"text\" : \"password\",\n        placeholder: \"Password\",\n        className: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: repeatPassword,\n        onChange: e => setRepeatPassword(e.target.value),\n        type: showPassword ? \"text\" : \"password\",\n        placeholder: \"Repeat password\",\n        className: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggler\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switcher\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setShowPassword(!showPassword),\n            className: \"slider round\",\n            children: [/*#__PURE__*/_jsxDEV(ShowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HideIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateProfileHandler(PASSWORDCHANGE),\n        className: \"confirm\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"9ARkC/rfXnl8O9jG4VEbvz/uYsE=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Profile.jsx"],"names":["React","useEffect","useRef","useState","DATACHANGE","PASSWORDCHANGE","MINPASSWORDLENGTH","NOERROR","PASSWORDDONTMATCH","getRequest","updateRequest","HideIcon","ShowIcon","Profile","userId","sessionStorage","getItem","surname","setSurname","name","setName","patronymic","setPatronymic","login","setLogin","password","setPassword","repeatPassword","setRepeatPassword","showPassword","setShowPassword","error","setError","avatar","setAvatar","inputFile","then","user","showError","e","hideError","isError","type","length","updateProfileHandler","updatedUser","data","catch","console","log","updatePhotoHandler","current","click","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { DATACHANGE, PASSWORDCHANGE } from \"../../constants/authConstants\";\nimport { MINPASSWORDLENGTH, NOERROR, PASSWORDDONTMATCH } from \"../../constants/errorConstants\";\nimport { getRequest, updateRequest } from \"../../services/authServices\";\nimport \"../../styles/Profile.css\";\nimport { HideIcon, ShowIcon } from \"../Common/Icons\";\n\nconst Profile = () => {\n    const userId = sessionStorage.getItem(\"id\");\n    const [surname, setSurname] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [patronymic, setPatronymic] = useState(\"\");\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [error, setError] = useState(NOERROR);\n    const [avatar, setAvatar] = useState(null);\n    const inputFile = useRef(null);\n    \n    useEffect(async () => {\n        await getRequest(userId).then(user => {\n            setSurname(user.surname);\n            setName(user.name);\n            setPatronymic(user.patronymic);\n            setLogin(user.login);\n        });\n    }, []);\n\n    const showError = e => {\n        setError(e);\n        return true;\n    }\n\n    const hideError = () => {\n        setError(NOERROR);\n        return false;\n    }\n\n    const isError = (type) => {\n        if (type === PASSWORDCHANGE) {\n            if (password.length < 6) {\n                return showError(MINPASSWORDLENGTH);\n            }\n            else if (password !== repeatPassword) {\n                return showError(PASSWORDDONTMATCH);\n            }\n        }\n        \n        return hideError();\n    }\n\n    const updateProfileHandler = async (type) => {\n        if (!isError(type)) {\n            return await getRequest(userId)\n                .then(async (user) => {\n                    let updatedUser;\n\n                    if (type === PASSWORDCHANGE) {\n                        updatedUser = { ...user, password };\n                    }\n                    else if (type === DATACHANGE) {\n                        updatedUser = { ...user, surname, name, patronymic };\n                    }\n\n                    return await updateRequest(updatedUser)\n                        .then(data => data)\n                        .catch(e => console.log(e))\n                })\n                .catch(e => console.log(e))\n        }\n    }\n\n    const updatePhotoHandler = () => {\n        inputFile.current.click();\n    }\n\n    return (\n        <div className=\"profile\">\n            <div className=\"person_data\">\n                <input onChange={e => setSurname(e.target.value)} value={surname} placeholder=\"Surname\"/>\n                <input onChange={e => setName(e.target.value)} value={name} placeholder=\"Name\"/>\n                <input onChange={e => setPatronymic(e.target.value)} value={patronymic} placeholder=\"Patronymic\"/>\n                <input className=\"avatar_choose\" type=\"file\" ref={inputFile} />\n                <button className=\"confirm\" onClick={updatePhotoHandler}>Upload photo</button>\n                <div>{avatar}</div>\n                <button onClick={() => updateProfileHandler(DATACHANGE)} className=\"confirm\">Submit</button>\n            </div>\n            <div className=\"profile_data\">\n                <div className=\"error_holder\">\n                    <span className=\"error\">{error}</span>\n                </div>\n                <input disabled value={login} onChange={e => setLogin(e.target.value)} placeholder=\"Login\" className=\"login\"/>\n                <input value={password} onChange={e => setPassword(e.target.value)} type={showPassword ? \"text\" : \"password\"} placeholder=\"Password\" className=\"password\"/>\n                <input value={repeatPassword}\n                       onChange={e => setRepeatPassword(e.target.value)} \n                       type={showPassword ? \"text\" : \"password\"}\n                       placeholder=\"Repeat password\" \n                       className=\"password\"\n                />\n                <div className=\"toggler\">\n                    <label className=\"switcher\">\n                        <input type=\"checkbox\"/>\n                        <span onClick={() => setShowPassword(!showPassword) } className=\"slider round\">\n                            <ShowIcon/>\n                            <HideIcon/>\n                        </span>\n                    </label>\n                </div>\n                <button onClick={() => updateProfileHandler(PASSWORDCHANGE)} className=\"confirm\">Update</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}