{"ast":null,"code":"import axios from \"axios\";\nimport { getProjectPoints, createProjectPoints, updateProjectPoints } from \"../redux/projectPointsActions\";\nconst axiosInstance = axios.create({\n  baseURL: \"https://localhost:5001/api/projectPoints\"\n});\nexport const getProjectPointsRequest = async (projectId, dispatch) => {\n  return await axiosInstance.get(`/${projectId}`).then(response => dispatch(getProjectPoints(response.data))).catch(e => {\n    throw e;\n  });\n};\nexport const AddProjectPointsRequest = async (projectPoints, dispatch) => {\n  return await axiosInstance.post(`/create`, projectPoints).then(response => dispatch(createProjectPoints(response.data))).catch(e => {\n    throw e;\n  });\n};\n_c = AddProjectPointsRequest;\nexport const UpdateProjectPointsRequest = async (projectPoints, dispatch) => {\n  return await axiosInstance.post(`/update`, projectPoints).then(response => dispatch(updateProjectPoints(response.data))).catch(e => {\n    throw e;\n  });\n};\n_c2 = UpdateProjectPointsRequest;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddProjectPointsRequest\");\n$RefreshReg$(_c2, \"UpdateProjectPointsRequest\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/services/projectPointServices.js"],"names":["axios","getProjectPoints","createProjectPoints","updateProjectPoints","axiosInstance","create","baseURL","getProjectPointsRequest","projectId","dispatch","get","then","response","data","catch","e","AddProjectPointsRequest","projectPoints","post","UpdateProjectPointsRequest"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,mBAAhD,QAA2E,+BAA3E;AAEA,MAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAE;AADsB,CAAb,CAAtB;AAIA,OAAO,MAAMC,uBAAuB,GAAG,OAAOC,SAAP,EAAkBC,QAAlB,KAA+B;AAClE,SAAO,MAAML,aAAa,CAACM,GAAd,CAAmB,IAAGF,SAAU,EAAhC,EACRG,IADQ,CACHC,QAAQ,IAAIH,QAAQ,CAACR,gBAAgB,CAACW,QAAQ,CAACC,IAAV,CAAjB,CADjB,EAERC,KAFQ,CAEFC,CAAC,IAAI;AAAE,UAAMA,CAAN;AAAS,GAFd,CAAb;AAGH,CAJM;AAMP,OAAO,MAAMC,uBAAuB,GAAG,OAAOC,aAAP,EAAsBR,QAAtB,KAAmC;AACtE,SAAO,MAAML,aAAa,CAACc,IAAd,CAAoB,SAApB,EAA8BD,aAA9B,EACRN,IADQ,CACHC,QAAQ,IAAIH,QAAQ,CAACP,mBAAmB,CAACU,QAAQ,CAACC,IAAV,CAApB,CADjB,EAERC,KAFQ,CAEFC,CAAC,IAAI;AAAE,UAAMA,CAAN;AAAS,GAFd,CAAb;AAGH,CAJM;KAAMC,uB;AAMb,OAAO,MAAMG,0BAA0B,GAAG,OAAOF,aAAP,EAAsBR,QAAtB,KAAmC;AACzE,SAAO,MAAML,aAAa,CAACc,IAAd,CAAoB,SAApB,EAA8BD,aAA9B,EACRN,IADQ,CACHC,QAAQ,IAAIH,QAAQ,CAACN,mBAAmB,CAACS,QAAQ,CAACC,IAAV,CAApB,CADjB,EAERC,KAFQ,CAEFC,CAAC,IAAI;AAAE,UAAMA,CAAN;AAAS,GAFd,CAAb;AAGH,CAJM;MAAMI,0B","sourcesContent":["import axios from \"axios\";\nimport { getProjectPoints, createProjectPoints, updateProjectPoints } from \"../redux/projectPointsActions\";\n\nconst axiosInstance = axios.create({\n    baseURL: \"https://localhost:5001/api/projectPoints\"\n})\n\nexport const getProjectPointsRequest = async (projectId, dispatch) => {\n    return await axiosInstance.get(`/${projectId}`)\n        .then(response => dispatch(getProjectPoints(response.data)))\n        .catch(e => { throw e })\n}\n\nexport const AddProjectPointsRequest = async (projectPoints, dispatch) => {\n    return await axiosInstance.post(`/create`, projectPoints)\n        .then(response => dispatch(createProjectPoints(response.data)))\n        .catch(e => { throw e })\n}\n\nexport const UpdateProjectPointsRequest = async (projectPoints, dispatch) => {\n    return await axiosInstance.post(`/update`, projectPoints)\n        .then(response => dispatch(updateProjectPoints(response.data)))\n        .catch(e => { throw e })\n}"]},"metadata":{},"sourceType":"module"}