{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport { TO_DO, IN_PROGRESS, COMPLETED } from \"../../constants/taskConstants\";\nimport TaskModal from \"../User/TaskModal\";\nimport { CREATE } from \"../../constants/modalConstants\";\nimport \"../../styles/ProjectBoard.css\";\n\nconst ProjectBoard = ({\n  setTab\n}) => {\n  _s();\n\n  const [openModal, setOpenModal] = useState(false);\n  const [category, setCategory] = useState(TO_DO);\n  const {\n    id,\n    projectId\n  } = useParams();\n  const dispatch = useDispatch();\n  const tasks = useSelector(store => store.tasks);\n  const projects = useSelector(store => store.projects);\n  const project = projects.find(proj => proj.id === Number(projectId));\n  const currentTasks = tasks.filter(task => task.project_Id === Number(projectId));\n  const [data, setData] = useState(initializeData());\n  useEffect(async () => await getTasksRequest(id, dispatch), []);\n  useEffect(async () => await getProjectsRequest(id, dispatch), []);\n  useEffect(() => {\n    if (project) {\n      setTab(project.name);\n    }\n  }, [project]);\n  useEffect(() => setData(initializeData()), [project]);\n\n  function initializeData() {\n    const categories = [TO_DO, IN_PROGRESS, COMPLETED];\n    const newData = categories.map(category => {\n      return {\n        title: category,\n        tasks: []\n      };\n    });\n    currentTasks.forEach(task => {\n      switch (task.category) {\n        case TO_DO:\n          newData[0].tasks.push(task);\n          break;\n\n        case IN_PROGRESS:\n          newData[1].tasks.push(task);\n          break;\n\n        case COMPLETED:\n          newData[2].tasks.push(task);\n          break;\n      }\n    });\n    return newData;\n  }\n\n  const handleDragStart = e => {};\n\n  const boardDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.target.style.background = \"unset\";\n    const taskId = e.dataTransfer.getData(\"task_Id\");\n    const task = document.querySelector(`#${taskId}`);\n    const createTask = e.target.querySelector(\".create_project_task_item\");\n    const emptyTask = e.target.querySelector(\".empty_project_task_item\");\n    const boards = document.querySelectorAll(\".project_tasks\");\n    const dashIndex = e.target.id.indexOf(\"-\");\n    const boardId = e.target.id.substr(dashIndex + 1);\n    task.attributes[\"data-board-id\"].value = boardId;\n    setTimeout(() => {\n      task.style.display = \"flex\";\n      emptyTask.style.display = \"none\";\n      createTask.style.display = \"flex\";\n      boards.forEach(board => board.style.background = \"unset\");\n    }, 0);\n    e.target.insertBefore(task, emptyTask);\n    e.target.appendChild(emptyTask);\n    e.target.appendChild(createTask);\n  };\n\n  const boardDragEnter = e => {\n    const createTask = e.target.querySelector(\".create_project_task_item\");\n    const emptyTask = e.target.querySelector(\".empty_project_task_item\");\n    const boards = document.querySelectorAll(\".project_tasks\");\n    boards.forEach(board => {\n      if (board == e.target) {\n        board.style.background = \"linear-gradient(to bottom, rgba(44, 45, 56, 1), rgba(36, 37, 45, 0.15))\";\n      } else {\n        board.style.background = \"unset\";\n      }\n    });\n    e.target.appendChild(emptyTask);\n    e.target.appendChild(createTask);\n  };\n\n  const boardDragLeave = e => {\n    e.preventDefault();\n    const emptyTask = e.target.querySelector(\".empty_project_task_item\");\n\n    if (emptyTask) {\n      emptyTask.style.display = \"none\";\n    }\n  };\n\n  const boardDragOver = e => {\n    e.preventDefault();\n    const afterElement = getDragAfterElement(e.target, e.clientY);\n    const emptyTask = e.target.querySelector(\".empty_project_task_item\");\n    const createTask = e.target.querySelector(\".empty_project_task_item\");\n    emptyTask.style.background = \"rgba(30, 30, 40, .5)\";\n    emptyTask.style.display = \"flex\";\n    createTask.style.display = \"flex\";\n    e.target.style.background = \"linear-gradient(to bottom, rgba(44, 45, 56, 1), rgba(36, 37, 45, 0.15))\";\n\n    if (!afterElement) {\n      e.target.insertBefore(emptyTask, createTask);\n    } else {\n      e.target.insertBefore(emptyTask, afterElement);\n    }\n  };\n\n  const taskDrop = e => {\n    const boardId = e.target.attributes[\"data-board-id\"].value;\n\n    if (boardId) {\n      const board = document.querySelector(`#board-${boardId}`);\n      e.target = board;\n      boardDrop(e);\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const taskDragLeave = e => {\n    const boardId = e.target.attributes[\"data-board-id\"].value;\n\n    if (boardId) {\n      const board = document.querySelector(`#board-${boardId}`);\n      e.target = board;\n      boardDragLeave(e);\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const taskDragEnter = e => {\n    const boardId = e.target.attributes[\"data-board-id\"].value;\n\n    if (boardId) {\n      const board = document.querySelector(`#board-${boardId}`);\n      e.target = board;\n      boardDragEnter(e);\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const taskDragStart = e => {\n    const target = e.target;\n    target.classList.add(\"dragging\");\n    e.dataTransfer.setData(\"task_Id\", target.id);\n    setTimeout(() => {\n      target.style.display = \"none\";\n    }, 0);\n  };\n\n  const taskDragEnd = e => {\n    e.target.classList.remove(\"dragging\");\n    e.target.style.display = \"flex\";\n    e.target.style.boxShadow = \"none\";\n  };\n\n  const taskDragOver = e => {\n    const boardId = e.target.attributes[\"data-board-id\"].value;\n\n    if (boardId) {\n      const board = document.querySelector(`#board-${boardId}`);\n      e.target = board;\n      boardDragOver(e);\n    }\n\n    if (e.target.className == \"project_task_item\") {\n      e.target.style.boxShadow = \"0px 10px 5px 1px rgba(0, 0, 15, .05)\";\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const getDragAfterElement = (board, y) => {\n    const tasks = [...board.querySelectorAll(\".project_task_item:not(.dragging)\")];\n    const result = tasks.reduce((closest, task) => {\n      const box = task.getBoundingClientRect();\n      const offset = y - box.top - box.height / 2;\n\n      if (offset < 0 && offset > closest.offset) {\n        return {\n          offset: offset,\n          element: task\n        };\n      }\n\n      return closest;\n    }, {\n      offset: Number.NEGATIVE_INFINITY\n    });\n    return result.element;\n  };\n\n  const EmptyProjectTaskItem = ({\n    boardId\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty_project_task_item\",\n      onDragEnter: taskDragEnter,\n      onDragLeave: taskDragLeave,\n      onDrop: taskDrop,\n      onDragOver: taskDragOver,\n      \"data-board-id\": boardId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this);\n  };\n\n  const ProjectTaskItem = ({\n    boardId,\n    task\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_task_item\",\n      draggable: true,\n      onDragEnter: taskDragEnter,\n      onDragEnd: taskDragEnd,\n      onDragLeave: taskDragLeave,\n      onDragStart: taskDragStart,\n      onDragOver: taskDragOver,\n      onDrop: taskDrop,\n      id: \"task-\" + task.id,\n      \"data-board-id\": boardId,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onDragEnter: taskDragEnter,\n        onDragLeave: taskDragLeave,\n        onDrop: taskDrop,\n        onDragOver: taskDragOver,\n        \"data-board-id\": boardId,\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this);\n  };\n\n  const CreateProjectTaskItem = ({\n    boardId,\n    category\n  }) => {\n    const openModalHandler = () => {\n      setOpenModal(true);\n      setCategory(category);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_project_task_item\",\n      onDragEnter: taskDragEnter,\n      onDragLeave: taskDragLeave,\n      onDrop: taskDrop,\n      onDragOver: taskDragOver,\n      \"data-board-id\": boardId,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: openModalHandler,\n        onDragEnter: taskDragEnter,\n        onDragLeave: taskDragLeave,\n        onDrop: taskDrop,\n        onDragOver: taskDragOver,\n        \"data-board-id\": boardId,\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderTaskModal = () => {\n    return openModal ? /*#__PURE__*/_jsxDEV(TaskModal, {\n      closeModal: () => setOpenModal(false),\n      type: CREATE,\n      category: category.category,\n      currentProject: project\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 25\n    }, this) : null;\n  };\n\n  const renderBoards = () => {\n    return data.map((board, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_tasks\",\n        id: \"board-\" + index,\n        onDrop: boardDrop,\n        onDragOver: boardDragOver,\n        onDragEnter: boardDragEnter,\n        onDragLeave: boardDragLeave,\n        children: [board.tasks.map(task => task.category === board.title ? /*#__PURE__*/_jsxDEV(ProjectTaskItem, {\n          boardId: index,\n          task: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 83\n        }, this) : null), /*#__PURE__*/_jsxDEV(EmptyProjectTaskItem, {\n          boardId: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CreateProjectTaskItem, {\n          boardId: index,\n          category: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project_board\",\n    children: [renderTaskModal(), renderBoards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectBoard, \"M2kdlYsLXYdPe35W8sOCNGN6tjQ=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = ProjectBoard;\nexport default ProjectBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectBoard\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/ProjectBoard.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","getProjectsRequest","getTasksRequest","TO_DO","IN_PROGRESS","COMPLETED","TaskModal","CREATE","ProjectBoard","setTab","openModal","setOpenModal","category","setCategory","id","projectId","dispatch","tasks","store","projects","project","find","proj","Number","currentTasks","filter","task","project_Id","data","setData","initializeData","name","categories","newData","map","title","forEach","push","handleDragStart","e","boardDrop","preventDefault","stopPropagation","target","style","background","taskId","dataTransfer","getData","document","querySelector","createTask","emptyTask","boards","querySelectorAll","dashIndex","indexOf","boardId","substr","attributes","value","setTimeout","display","board","insertBefore","appendChild","boardDragEnter","boardDragLeave","boardDragOver","afterElement","getDragAfterElement","clientY","taskDrop","taskDragLeave","taskDragEnter","taskDragStart","classList","add","taskDragEnd","remove","boxShadow","taskDragOver","className","y","result","reduce","closest","box","getBoundingClientRect","offset","top","height","element","NEGATIVE_INFINITY","EmptyProjectTaskItem","ProjectTaskItem","CreateProjectTaskItem","openModalHandler","renderTaskModal","renderBoards","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport { TO_DO, IN_PROGRESS, COMPLETED } from \"../../constants/taskConstants\";\nimport TaskModal from \"../User/TaskModal\";\nimport { CREATE } from \"../../constants/modalConstants\";\nimport \"../../styles/ProjectBoard.css\";\n\nconst ProjectBoard = ({ setTab }) => {\n    const [openModal, setOpenModal] = useState(false);\n    const [category, setCategory] = useState(TO_DO);\n    const { id, projectId } = useParams();\n    const dispatch = useDispatch();\n    const tasks = useSelector(store => store.tasks);\n    const projects = useSelector(store => store.projects);\n    const project = projects.find(proj => proj.id === Number(projectId));\n    const currentTasks = tasks.filter(task => task.project_Id === Number(projectId));\n    const [data, setData] = useState(initializeData());\n\n    useEffect(async () => await getTasksRequest(id, dispatch), []);\n    useEffect(async () => await getProjectsRequest(id, dispatch), []);\n\n    useEffect(() => {\n        if (project) {\n            setTab(project.name);\n        }\n    }, [project]);\n\n    useEffect(() => setData(initializeData()), [project]);\n\n    function initializeData () {\n        const categories = [TO_DO, IN_PROGRESS, COMPLETED];\n        const newData = categories.map(category => { return { title: category, tasks: [] } });\n\n        currentTasks.forEach(task => {\n            switch (task.category) {\n                case TO_DO:\n                    newData[0].tasks.push(task);\n                    break;\n                case IN_PROGRESS:\n                    newData[1].tasks.push(task);\n                    break;\n                case COMPLETED:\n                    newData[2].tasks.push(task);\n                    break;\n            }\n        })\n\n        return newData;\n    }\n\n    const handleDragStart = e => {\n\n    }\n\n\n\n\n\n    const boardDrop = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        e.target.style.background = \"unset\";\n\n        const taskId = e.dataTransfer.getData(\"task_Id\");\n        const task = document.querySelector(`#${taskId}`);\n\n        const createTask = e.target.querySelector(\".create_project_task_item\");\n        const emptyTask = e.target.querySelector(\".empty_project_task_item\");\n\n        const boards = document.querySelectorAll(\".project_tasks\");\n        const dashIndex = e.target.id.indexOf(\"-\");\n        const boardId = e.target.id.substr(dashIndex + 1);\n        task.attributes[\"data-board-id\"].value = boardId;\n\n        setTimeout(() => {\n            task.style.display = \"flex\";\n            emptyTask.style.display = \"none\";\n            createTask.style.display = \"flex\";\n            boards.forEach(board => board.style.background = \"unset\");\n        }, 0);\n\n        e.target.insertBefore(task, emptyTask);\n        e.target.appendChild(emptyTask);\n        e.target.appendChild(createTask);\n    }\n\n    const boardDragEnter = e => {\n        const createTask = e.target.querySelector(\".create_project_task_item\");\n        const emptyTask = e.target.querySelector(\".empty_project_task_item\");\n        const boards = document.querySelectorAll(\".project_tasks\");\n\n        boards.forEach(board => {\n            if (board == e.target) {\n                board.style.background = \"linear-gradient(to bottom, rgba(44, 45, 56, 1), rgba(36, 37, 45, 0.15))\";\n            }\n            else {\n                board.style.background = \"unset\";\n            }\n        })\n        \n        e.target.appendChild(emptyTask);\n        e.target.appendChild(createTask);\n    }\n\n    const boardDragLeave = e => {\n        e.preventDefault();\n\n        const emptyTask = e.target.querySelector(\".empty_project_task_item\");\n\n        if (emptyTask) {\n            emptyTask.style.display = \"none\";\n        }\n    }\n\n    const boardDragOver = e => {\n        e.preventDefault();\n        const afterElement = getDragAfterElement(e.target, e.clientY);\n        const emptyTask = e.target.querySelector(\".empty_project_task_item\");\n        const createTask = e.target.querySelector(\".empty_project_task_item\");\n\n        emptyTask.style.background = \"rgba(30, 30, 40, .5)\";\n        emptyTask.style.display = \"flex\";\n        createTask.style.display = \"flex\";\n        e.target.style.background = \"linear-gradient(to bottom, rgba(44, 45, 56, 1), rgba(36, 37, 45, 0.15))\";\n\n        if (!afterElement) {\n            e.target.insertBefore(emptyTask, createTask);\n        }\n        else {\n            e.target.insertBefore(emptyTask, afterElement);\n        }\n    }\n\n    const taskDrop = e => {\n        const boardId = e.target.attributes[\"data-board-id\"].value;\n\n        if (boardId) {\n            const board = document.querySelector(`#board-${boardId}`);\n            e.target = board;\n            boardDrop(e);\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const taskDragLeave = e => {\n        const boardId = e.target.attributes[\"data-board-id\"].value;\n\n        if (boardId) {\n            const board = document.querySelector(`#board-${boardId}`);\n            e.target = board;\n            boardDragLeave(e);\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const taskDragEnter = e => {\n        const boardId = e.target.attributes[\"data-board-id\"].value;\n\n        if (boardId) {\n            const board = document.querySelector(`#board-${boardId}`);\n            e.target = board;\n            boardDragEnter(e);\n        }\n        \n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const taskDragStart = e => {\n        const target = e.target;\n        target.classList.add(\"dragging\");\n        e.dataTransfer.setData(\"task_Id\", target.id);\n\n        setTimeout(() => {\n            target.style.display = \"none\";\n        }, 0);\n    }\n\n    const taskDragEnd = e => {\n        e.target.classList.remove(\"dragging\");\n        e.target.style.display = \"flex\";\n        e.target.style.boxShadow = \"none\";\n    }\n    \n    const taskDragOver = e => {\n        const boardId = e.target.attributes[\"data-board-id\"].value;\n\n        if (boardId) {\n            const board = document.querySelector(`#board-${boardId}`);\n            e.target = board;\n            boardDragOver(e);\n        }\n\n        if (e.target.className == \"project_task_item\") {\n            e.target.style.boxShadow = \"0px 10px 5px 1px rgba(0, 0, 15, .05)\";\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const getDragAfterElement = (board, y) => {\n        const tasks = [...board.querySelectorAll(\".project_task_item:not(.dragging)\")];\n        const result = tasks.reduce((closest, task) => {\n            const box = task.getBoundingClientRect();\n            const offset = y - box.top - box.height / 2;\n\n            if (offset < 0 && offset > closest.offset) {\n                return { offset: offset, element: task }\n            }\n            \n            return closest;\n        }, { offset: Number.NEGATIVE_INFINITY })\n        \n        return result.element;\n    }\n\n\n    \n\n    const EmptyProjectTaskItem = ({ boardId }) => {\n        return(\n            <div className=\"empty_project_task_item\"\n                 onDragEnter={taskDragEnter}\n                 onDragLeave={taskDragLeave}\n                 onDrop={taskDrop}\n                 onDragOver={taskDragOver}\n                 data-board-id={boardId}\n            >\n            </div>\n        )\n    }\n\n    const ProjectTaskItem = ({ boardId, task }) => {\n        return(\n            <div className=\"project_task_item\"\n                 draggable={true}\n                 onDragEnter={taskDragEnter}\n                 onDragEnd={taskDragEnd}\n                 onDragLeave={taskDragLeave}\n                 onDragStart={taskDragStart}\n                 onDragOver={taskDragOver}\n                 onDrop={taskDrop}\n                 id={\"task-\" + task.id}\n                 data-board-id={boardId}\n            >\n                <p onDragEnter={taskDragEnter}\n                 onDragLeave={taskDragLeave}\n                 onDrop={taskDrop}\n                 onDragOver={taskDragOver}\n                 data-board-id={boardId}\n                >{ task.name }</p>\n            </div>\n        )\n    }\n\n    const CreateProjectTaskItem = ({ boardId, category }) => {\n        const openModalHandler = () => {\n            setOpenModal(true);\n            setCategory(category);\n        }\n        \n        return(\n            <div className=\"create_project_task_item\"\n                 onDragEnter={taskDragEnter}\n                 onDragLeave={taskDragLeave}\n                 onDrop={taskDrop}\n                 onDragOver={taskDragOver}\n                 data-board-id={boardId}\n            >\n                <span onClick={openModalHandler}\n                      onDragEnter={taskDragEnter}\n                      onDragLeave={taskDragLeave}\n                      onDrop={taskDrop}\n                      onDragOver={taskDragOver}\n                      data-board-id={boardId}\n                >Add task</span>\n            </div>\n        )\n    }\n\n    const renderTaskModal = () => {\n        return(\n            openModal ? <TaskModal closeModal={() => setOpenModal(false)} \n                                   type={CREATE} \n                                   category={category.category}\n                                   currentProject={project} \n                        /> : null \n        )\n    }\n\n    const renderBoards = () => {\n        return (\n            data.map((board, index) => \n                <div className=\"board\">\n                    <div className=\"project_title\">\n                        <span>{ board.title }</span>\n                    </div>\n                    <div className=\"project_tasks\"\n                         id={\"board-\" + index}\n                         onDrop={boardDrop}\n                         onDragOver={boardDragOver}\n                         onDragEnter={boardDragEnter}\n                         onDragLeave={boardDragLeave}\n                    >\n                        { board.tasks.map(task => task.category === board.title ? <ProjectTaskItem boardId={index} task={task} /> : null) }\n                        <EmptyProjectTaskItem boardId={index}/>\n                        <CreateProjectTaskItem boardId={index} category={ board.title }/>\n                    </div>\n                </div>\n            )\n        )\n    }\n\n    return(\n        <div className=\"project_board\">\n            { renderTaskModal() }\n            { renderBoards() }\n        </div>\n    )\n}\n\nexport default ProjectBoard;\n"]},"metadata":{},"sourceType":"module"}