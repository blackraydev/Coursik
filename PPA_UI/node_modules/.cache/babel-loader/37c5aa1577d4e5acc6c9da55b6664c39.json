{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Tasks.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { HideTriangleIcon, ShowTriangleIcon } from \"../Common/Icons\";\nimport { RECENTLYASSIGNED, TODAY, UPCOMING, LATER } from \"../../constants/taskConstants\";\nimport TaskItem from \"./TaskItem\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport \"../../styles/Tasks.css\";\n\nconst Tasks = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const tasks = useSelector(store => store);\n  const userId = sessionStorage.getItem(\"id\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getTasksRequest(userId, dispatch);\n  }, []);\n\n  const TaskHandler = ({\n    type\n  }) => {\n    _s();\n\n    const [hideTaskHandler, setHideTaskHandler] = useState(false);\n\n    const renderTasks = () => {\n      if (type === TODAY) {\n        return tasks.map(task => {\n          const currentDate = new Date();\n          const taskDate = new Date(task.due_Date);\n          const isToday = taskDate.getDate() === currentDate.getDate() && taskDate.getMonth() === currentDate.getMonth() && taskDate.getFullYear() === currentDate.getFullYear();\n          if (isToday) return /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 41\n          }, this);\n        });\n      }\n\n      if (type === UPCOMING) {\n        return tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date)).map(task => {\n          const currentDate = new Date();\n          const dueDate = new Date(task.due_Date);\n          const diff = Math.ceil((dueDate - currentDate) / (1000 * 3600 * 24));\n          if (diff < 5) return /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 42\n          }, this);\n        });\n      }\n\n      if (type == LATER) {}\n\n      if (type === RECENTLYASSIGNED) {\n        return tasks.sort((taskA, taskB) => new Date(taskB.assign_Date) - new Date(taskA.assign_Date)).map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n          task: task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 42\n        }, this));\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task_handler\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title_handler\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setHideTaskHandler(!hideTaskHandler),\n          className: \"title\",\n          children: [hideTaskHandler ? /*#__PURE__*/_jsxDEV(HideTriangleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(ShowTriangleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 67\n          }, this), type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: hideTaskHandler ? \"tasks tasks-hidden\" : \"tasks\",\n        children: renderTasks()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(TaskHandler, \"PujwaJ78fcYCXu21h9WkoAFlFHE=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks_component\",\n    children: [/*#__PURE__*/_jsxDEV(TaskHandler, {\n      type: TODAY\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskHandler, {\n      type: UPCOMING\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskHandler, {\n      type: LATER\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskHandler, {\n      type: RECENTLYASSIGNED\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Tasks, \"MHZNQ8U6UW3eW5K5TdbnCHvwlvk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Tasks.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","HideTriangleIcon","ShowTriangleIcon","RECENTLYASSIGNED","TODAY","UPCOMING","LATER","TaskItem","getTasksRequest","Tasks","tasks","store","userId","sessionStorage","getItem","dispatch","TaskHandler","type","hideTaskHandler","setHideTaskHandler","renderTasks","map","task","currentDate","Date","taskDate","due_Date","isToday","getDate","getMonth","getFullYear","id","sort","taskA","taskB","dueDate","diff","Math","ceil","assign_Date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { HideTriangleIcon, ShowTriangleIcon } from \"../Common/Icons\";\nimport { RECENTLYASSIGNED, TODAY, UPCOMING, LATER } from \"../../constants/taskConstants\";\nimport TaskItem from \"./TaskItem\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport \"../../styles/Tasks.css\";\n\nconst Tasks = () => {\n    const tasks = useSelector(store => store);\n    const userId = sessionStorage.getItem(\"id\");\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        getTasksRequest(userId, dispatch);\n    }, []);\n\n    const TaskHandler = ({ type }) => {\n        const [hideTaskHandler, setHideTaskHandler] = useState(false);\n\n        const renderTasks = () => {\n            if (type === TODAY) {\n                return tasks.map(task => {\n                    const currentDate = new Date();\n                    const taskDate = new Date(task.due_Date);\n                    const isToday = taskDate.getDate() === currentDate.getDate() && taskDate.getMonth() === currentDate.getMonth() && taskDate.getFullYear() === currentDate.getFullYear();\n\n                    if (isToday) return <TaskItem key={task.id} task={task} />\n                });\n            }\n\n            if (type === UPCOMING) {\n                return tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date))\n                            .map(task => {\n                    const currentDate = new Date();\n                    const dueDate = new Date(task.due_Date);\n                    const diff = Math.ceil((dueDate - currentDate) / (1000 * 3600 * 24));\n                                \n                    if (diff < 5) return <TaskItem key={task.id} task={task} />\n                });\n            }\n\n            if (type == LATER) {\n                \n            }\n\n            if (type === RECENTLYASSIGNED) { \n                return tasks.sort((taskA, taskB) => new Date(taskB.assign_Date) - new Date(taskA.assign_Date))\n                            .map(task => <TaskItem key={task.id} task={task} />);\n            }\n        }\n\n        return(\n            <div className=\"task_handler\">\n                <div className=\"title_handler\">\n                    <span onClick={() => setHideTaskHandler(!hideTaskHandler)} className=\"title\">\n                        { hideTaskHandler ? <HideTriangleIcon/> : <ShowTriangleIcon/> }\n                        { type }\n                    </span>\n                </div>\n                <div className={hideTaskHandler ? \"tasks tasks-hidden\" : \"tasks\"}>\n                    { renderTasks() }\n                </div>\n            </div>\n        );\n    }\n\n    return(\n        <div className=\"tasks_component\">\n            <TaskHandler type={TODAY}/>\n            <TaskHandler type={UPCOMING}/>\n            <TaskHandler type={LATER}/>\n            <TaskHandler type={RECENTLYASSIGNED}/>\n        </div>\n    )\n}\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}