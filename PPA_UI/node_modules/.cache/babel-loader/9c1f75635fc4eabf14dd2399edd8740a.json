{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Guest/Auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { LOGIN, REGISTER } from \"../../constants/authConstants\";\nimport { ShowIcon, HideIcon } from \"../Common/Icons\";\nimport { EXISTINGEMAIL, INVALIDDATA, MINPASSWORDLENGTH, NOERROR, PASSWORDDONTMATCH, UNKNOWNERROR } from \"../../constants/errorConstants\";\nimport { loginRequest, registerRequest } from \"../../services/authServices\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../../styles/Auth.css\";\n\nconst Auth = ({\n  authMethod\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState(NOERROR);\n  useEffect(() => hideError(), [login, password, repeatPassword, authMethod]);\n  useEffect(() => {\n    const token = getToken();\n\n    if (token) {\n      switchRoute(\"/home/1\");\n    }\n  }, [authMethod]);\n\n  const hideError = () => {\n    setError(NOERROR);\n    return false;\n  };\n\n  const showError = e => {\n    setError(e);\n    return true;\n  };\n\n  const isError = () => {\n    if (password.length < 6) {\n      return showError(MINPASSWORDLENGTH);\n    } else if (password !== repeatPassword) {\n      return showError(PASSWORDDONTMATCH);\n    }\n\n    return hideError();\n  };\n\n  const authHandler = () => {\n    if (authMethod === LOGIN) {\n      return loginHandler();\n    }\n\n    if (!isError()) {\n      return registerHandler();\n    }\n  };\n\n  const loginHandler = async () => {\n    const existingUser = {\n      login,\n      password\n    };\n    return await loginRequest(existingUser).then(data => {\n      setUserId(data.loggedUser.id);\n      setToken(data.token.accessToken);\n      hideError();\n      switchRoute(`/home/${data.loggedUser.id}`);\n    }).catch(() => showError(INVALIDDATA));\n  };\n\n  const registerHandler = async () => {\n    const newUser = {\n      login,\n      password\n    };\n    return await registerRequest(newUser).then(data => {\n      setUserId(data.newUser.id);\n      setToken(data.token.accessToken);\n      switchRoute(`/home/${data.newUser.id}/profile`);\n      hideError();\n    }).catch(() => showError(EXISTINGEMAIL));\n  };\n\n  const setUserId = userId => {\n    const id = \"id\";\n    sessionStorage.setItem(id, userId);\n  };\n\n  const setToken = accessToken => {\n    const token = \"accessToken\";\n    sessionStorage.setItem(token, accessToken);\n  };\n\n  const getToken = () => {\n    const token = \"accessToken\";\n    return sessionStorage.getItem(token);\n  };\n\n  const switchRoute = url => history.push(url);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: login,\n      onChange: e => setLogin(e.target.value),\n      placeholder: \"Login\",\n      className: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      type: showPassword ? \"text\" : \"password\",\n      placeholder: \"Password\",\n      className: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), authMethod === REGISTER ? /*#__PURE__*/_jsxDEV(\"input\", {\n      value: repeatPassword,\n      onChange: e => setRepeatPassword(e.target.value),\n      type: showPassword ? \"text\" : \"password\",\n      placeholder: \"Repeat password\",\n      className: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggler\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"switcher\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setShowPassword(!showPassword),\n          className: \"slider round\",\n          children: [/*#__PURE__*/_jsxDEV(ShowIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HideIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => authHandler(),\n      className: \"confirm\",\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"XlndGkdOt15TaHCC+BiPd8eOCzc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/Guest/Auth.jsx"],"names":["React","useEffect","useState","LOGIN","REGISTER","ShowIcon","HideIcon","EXISTINGEMAIL","INVALIDDATA","MINPASSWORDLENGTH","NOERROR","PASSWORDDONTMATCH","UNKNOWNERROR","loginRequest","registerRequest","useHistory","Auth","authMethod","history","login","setLogin","password","setPassword","repeatPassword","setRepeatPassword","showPassword","setShowPassword","error","setError","hideError","token","getToken","switchRoute","showError","e","isError","length","authHandler","loginHandler","registerHandler","existingUser","then","data","setUserId","loggedUser","id","setToken","accessToken","catch","newUser","userId","sessionStorage","setItem","getItem","url","push","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { LOGIN, REGISTER } from \"../../constants/authConstants\";\nimport { ShowIcon, HideIcon } from \"../Common/Icons\";\nimport { EXISTINGEMAIL, INVALIDDATA, MINPASSWORDLENGTH, NOERROR, PASSWORDDONTMATCH, UNKNOWNERROR } from \"../../constants/errorConstants\";\nimport { loginRequest, registerRequest } from \"../../services/authServices\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../../styles/Auth.css\";\n\nconst Auth = ({ authMethod }) => {\n    const history = useHistory();\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [error, setError] = useState(NOERROR);\n\n    useEffect(() => hideError(), [login, password, repeatPassword, authMethod]);\n    \n    useEffect(() => {\n        const token = getToken();\n\n        if (token) {\n            switchRoute(\"/home/1\");\n        }\n    }, [authMethod]);\n\n    const hideError = () => {\n        setError(NOERROR);\n        return false;\n    }\n    \n    const showError = e => {\n        setError(e);\n        return true;\n    }\n\n    const isError = () => {\n        if (password.length < 6) {\n            return showError(MINPASSWORDLENGTH);\n        }\n        else if (password !== repeatPassword) {\n            return showError(PASSWORDDONTMATCH);\n        }\n\n        return hideError();\n    }\n\n    const authHandler = () => {\n        if (authMethod === LOGIN) {\n            return loginHandler();\n        }\n\n        if (!isError()) {\n            return registerHandler();\n        }\n    }\n\n    const loginHandler = async () => {\n        const existingUser = { login, password };\n\n        return await loginRequest(existingUser)\n            .then((data) => {\n                setUserId(data.loggedUser.id);\n                setToken(data.token.accessToken);\n                hideError();\n                switchRoute(`/home/${data.loggedUser.id}`);\n            })\n            .catch(() => showError(INVALIDDATA));\n    }\n\n    const registerHandler = async () => {\n        const newUser = { login, password };\n\n        return await registerRequest(newUser)\n            .then((data) => {\n                setUserId(data.newUser.id);\n                setToken(data.token.accessToken);\n                switchRoute(`/home/${data.newUser.id}/profile`);\n                hideError();\n            })\n            .catch(() => showError(EXISTINGEMAIL));\n    }\n\n    const setUserId = userId => {\n        const id = \"id\";\n        sessionStorage.setItem(id, userId);\n    }\n\n    const setToken = accessToken => {\n        const token = \"accessToken\";\n        sessionStorage.setItem(token, accessToken);\n    }\n\n    const getToken = () => {\n        const token = \"accessToken\";\n        return sessionStorage.getItem(token); \n    }\n\n    const switchRoute = url => history.push(url);\n\n    return(\n        <div className=\"auth\">\n            <span className=\"error\">{error}</span>\n            <input value={login} onChange={e => setLogin(e.target.value)} placeholder=\"Login\" className=\"login\"/>\n            <input value={password} onChange={e => setPassword(e.target.value)} type={showPassword ? \"text\" : \"password\"} placeholder=\"Password\" className=\"password\"/>\n            {\n                authMethod === REGISTER ? \n                    <input value={repeatPassword}\n                           onChange={e => setRepeatPassword(e.target.value)} \n                           type={showPassword ? \"text\" : \"password\"}\n                           placeholder=\"Repeat password\" \n                           className=\"password\"\n                    /> : null \n            }\n            <div className=\"toggler\">\n                <label className=\"switcher\">\n                    <input type=\"checkbox\"/>\n                    <span onClick={() => setShowPassword(!showPassword) } className=\"slider round\">\n                        <ShowIcon/>\n                        <HideIcon/>\n                    </span>\n                </label>\n            </div>\n            <button onClick={() => authHandler()} className=\"confirm\">Confirm</button>\n        </div>\n    )\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}