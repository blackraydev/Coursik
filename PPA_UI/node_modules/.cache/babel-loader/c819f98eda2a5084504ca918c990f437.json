{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport { HideTriangleIcon, ShowTriangleIcon } from \"../Common/Icons\";\nimport TaskItem from \"./TaskItem\";\nimport \"../../styles/Home.css\";\nimport ProjectHandler from \"./ProjectHandler\";\nimport { YOUR } from \"../../constants/projectConstants\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\n\nconst Home = ({\n  setTab\n}) => {\n  _s();\n\n  const [hideTasks, setHideTasks] = useState(false);\n  const dispatch = useDispatch();\n  const tasks = useSelector(store => store.tasks);\n  const userId = sessionStorage.getItem(\"id\");\n  useEffect(() => getTasksRequest(userId, dispatch), []);\n  useEffect(() => getProjectsRequest(userId, dispatch), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home_component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks_due_soon\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title_handler\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setHideTasks(!hideTasks),\n          className: \"title_with_icon\",\n          children: [hideTasks ? /*#__PURE__*/_jsxDEV(HideTriangleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(ShowTriangleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: \"Tasks Due Soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: hideTasks ? \"tasks tasks-hidden\" : \"tasks\",\n        children: tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date)).map(task => {\n          const currentDate = new Date();\n          const dueDate = new Date(task.due_Date);\n          const diff = Math.ceil((dueDate - currentDate) / (1000 * 3600 * 24));\n          if (task.due_Date && diff < 5) return /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 71\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectHandler, {\n      setTab: setTab,\n      type: YOUR,\n      title: \"Recent Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"wHdVzcKar7SEyPRTYrKJxd4Ha3g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Applications/MyFiles/Web/ProjectPlanning/PPA_UI/src/components/User/Home.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getTasksRequest","HideTriangleIcon","ShowTriangleIcon","TaskItem","ProjectHandler","YOUR","getProjectsRequest","Home","setTab","hideTasks","setHideTasks","dispatch","tasks","store","userId","sessionStorage","getItem","sort","taskA","taskB","Date","due_Date","map","task","currentDate","dueDate","diff","Math","ceil","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTasksRequest } from \"../../services/taskServices\";\nimport { HideTriangleIcon, ShowTriangleIcon } from \"../Common/Icons\";\nimport TaskItem from \"./TaskItem\";\nimport \"../../styles/Home.css\";\nimport ProjectHandler from \"./ProjectHandler\";\nimport { YOUR } from \"../../constants/projectConstants\";\nimport { getProjectsRequest } from \"../../services/projectServices\";\n\nconst Home = ({ setTab }) => {\n    const [hideTasks, setHideTasks] = useState(false);\n    const dispatch = useDispatch();\n    const tasks = useSelector(store => store.tasks);\n    const userId = sessionStorage.getItem(\"id\");\n\n    useEffect(() => getTasksRequest(userId, dispatch), []);\n    useEffect(() => getProjectsRequest(userId, dispatch), []);\n\n    return(\n        <div className=\"home_component\">\n            <div className=\"tasks_due_soon\">\n                <div className=\"title_handler\">\n                    <span onClick={() => setHideTasks(!hideTasks)} className=\"title_with_icon\">\n                        { hideTasks ? <HideTriangleIcon/> : <ShowTriangleIcon/> }\n                        <span className=\"title\">Tasks Due Soon</span>\n                    </span>\n                </div>\n                <div className={ hideTasks ? \"tasks tasks-hidden\" : \"tasks\" }>\n                    { \n                        tasks.sort((taskA, taskB) => new Date(taskA.due_Date) - new Date(taskB.due_Date))\n                             .map(task => { \n                                const currentDate = new Date();\n                                const dueDate = new Date(task.due_Date);\n                                const diff = Math.ceil((dueDate - currentDate) / (1000 * 3600 * 24));\n\n                                if (task.due_Date && diff < 5) return <TaskItem key={task.id} task={task} />\n                              })\n                    }\n                </div>\n            </div>\n                <ProjectHandler setTab={setTab} type={YOUR} title=\"Recent Projects\" />\n        </div>\n    )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}